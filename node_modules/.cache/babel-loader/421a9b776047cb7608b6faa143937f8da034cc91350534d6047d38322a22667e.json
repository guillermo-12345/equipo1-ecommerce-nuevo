{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\views\\\\CheckOut.jsx\",\n  _s = $RefreshSig$();\n/* import \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\nimport mockSalesData from \"../mockSalesData\";\r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = ({ name, phone, email }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const newOrderNumber = mockSalesData.length > 0 ? mockSalesData[mockSalesData.length - 1].orderNumber + 1 : 1;\r\n      const orderId = `${newOrderNumber}`;\r\n      setOrderId(orderId);\r\n\r\n      const newSalesData = cart.map(({ id, title, price, quantity, category }) => ({\r\n        orderNumber: newOrderNumber,\r\n        quantity,\r\n        productName: title,\r\n        category,\r\n        date: new Date().toISOString().split('T')[0],\r\n        customerName: name\r\n      }));\r\n\r\n      mockSalesData.push(...newSalesData);\r\n\r\n      clearCart();\r\n    } catch (error) {\r\n      console.error(\"Error al crear la orden\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se est√° generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El ID de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\"text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut; */\n\nimport \"../App.css\";\nimport { useState, useContext } from \"react\";\nimport { CartContext } from \"../context/cartContext\";\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\nimport { collection, addDoc } from 'firebase/firestore';\nimport { db } from '../components/service/firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckOut = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [orderId, setOrderId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const {\n    cart,\n    total,\n    clearCart\n  } = useContext(CartContext);\n  const createOrder = async ({\n    name,\n    phone,\n    email\n  }) => {\n    setLoading(true);\n    console.log(\"Creating order with data:\", {\n      name,\n      phone,\n      email,\n      cart,\n      total\n    });\n    try {\n      const objOrder = {\n        buyer: {\n          name,\n          phone,\n          email\n        },\n        items: cart.map(({\n          id,\n          title,\n          price,\n          quantity\n        }) => ({\n          id,\n          title,\n          price,\n          quantity\n        })),\n        total: total,\n        date: new Date().toISOString()\n      };\n      console.log(\"Order object:\", objOrder);\n      const ordersCollectionRef = collection(db, 'orders');\n      const docRef = await addDoc(ordersCollectionRef, objOrder);\n      console.log(\"Order created with ID:\", docRef.id);\n      setOrderId(docRef.id);\n      clearCart();\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Se est\\xE1 generando su orden...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  if (orderId) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"El ID de su orden es: \", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de tu compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), cart.map(({\n        id,\n        img,\n        title,\n        price,\n        quantity\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-uppercase fw-bolder\",\n          id: \"itemName\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio Unitario: $\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"80px\",\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cantidad: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total a pagar: $\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      onConfirm: createOrder,\n      formData: formData,\n      onInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckOut, \"eEV+TyugzwCM4KzgRLH4/2Tclr4=\");\n_c = CheckOut;\nexport default CheckOut;\nvar _c;\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["useState","useContext","CartContext","CheckoutForm","collection","addDoc","db","jsxDEV","_jsxDEV","CheckOut","_s","loading","setLoading","orderId","setOrderId","formData","setFormData","name","phone","email","cart","total","clearCart","createOrder","console","log","objOrder","buyer","items","map","id","title","price","quantity","date","Date","toISOString","ordersCollectionRef","docRef","error","handleInputChange","e","value","target","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","img","width","src","alt","onConfirm","onInputChange","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/views/CheckOut.jsx"],"sourcesContent":["/* import \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\nimport mockSalesData from \"../mockSalesData\";\r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = ({ name, phone, email }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const newOrderNumber = mockSalesData.length > 0 ? mockSalesData[mockSalesData.length - 1].orderNumber + 1 : 1;\r\n      const orderId = `${newOrderNumber}`;\r\n      setOrderId(orderId);\r\n\r\n      const newSalesData = cart.map(({ id, title, price, quantity, category }) => ({\r\n        orderNumber: newOrderNumber,\r\n        quantity,\r\n        productName: title,\r\n        category,\r\n        date: new Date().toISOString().split('T')[0],\r\n        customerName: name\r\n      }));\r\n\r\n      mockSalesData.push(...newSalesData);\r\n\r\n      clearCart();\r\n    } catch (error) {\r\n      console.error(\"Error al crear la orden\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se est√° generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El ID de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\"text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut; */\r\n\r\nimport \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { db } from '../components/service/firebaseConfig'; \r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = async ({ name, phone, email }) => {\r\n    setLoading(true);\r\n    console.log(\"Creating order with data:\", { name, phone, email, cart, total });\r\n  \r\n    try {\r\n      const objOrder = {\r\n        buyer: {\r\n          name,\r\n          phone,\r\n          email,\r\n        },\r\n        items: cart.map(({ id, title, price, quantity }) => ({\r\n          id,\r\n          title,\r\n          price,\r\n          quantity,\r\n        })),\r\n        total: total,\r\n        date: new Date().toISOString(),\r\n      };\r\n      \r\n      console.log(\"Order object:\", objOrder);\r\n      \r\n  \r\n      const ordersCollectionRef = collection(db, 'orders');\r\n      const docRef = await addDoc(ordersCollectionRef, objOrder);\r\n  \r\n      console.log(\"Order created with ID:\", docRef.id);\r\n      setOrderId(docRef.id);\r\n      clearCart();\r\n    } catch (error) {\r\n      console.error(\"Error creating order:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se est√° generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El ID de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\"text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}