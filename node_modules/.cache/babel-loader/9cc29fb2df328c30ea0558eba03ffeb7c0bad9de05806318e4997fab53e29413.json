{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2018 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DatastoreAdminClient = exports.DatastoreClient = exports.v1 = exports.Transaction = exports.Query = exports.DatastoreRequest = exports.Index = exports.Datastore = exports.or = exports.and = exports.PropertyFilter = exports.AggregateField = exports.Key = void 0;\n/**\n * @namespace google\n */\n/**\n * @namespace google.datastore.v1\n */\n/**\n * @namespace google.protobuf\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst google_gax_1 = require(\"google-gax\");\nconst is = require(\"is\");\nconst stream_1 = require(\"stream\");\nconst entity_1 = require(\"./entity\");\nconst aggregate_1 = require(\"./aggregate\");\nObject.defineProperty(exports, \"AggregateField\", {\n  enumerable: true,\n  get: function () {\n    return aggregate_1.AggregateField;\n  }\n});\nvar Key = entity_1.entity.Key;\nexports.Key = Key;\nconst filter_1 = require(\"./filter\");\nObject.defineProperty(exports, \"PropertyFilter\", {\n  enumerable: true,\n  get: function () {\n    return filter_1.PropertyFilter;\n  }\n});\nObject.defineProperty(exports, \"and\", {\n  enumerable: true,\n  get: function () {\n    return filter_1.and;\n  }\n});\nObject.defineProperty(exports, \"or\", {\n  enumerable: true,\n  get: function () {\n    return filter_1.or;\n  }\n});\nconst index_class_1 = require(\"./index-class\");\nObject.defineProperty(exports, \"Index\", {\n  enumerable: true,\n  get: function () {\n    return index_class_1.Index;\n  }\n});\nconst query_1 = require(\"./query\");\nObject.defineProperty(exports, \"Query\", {\n  enumerable: true,\n  get: function () {\n    return query_1.Query;\n  }\n});\nconst request_1 = require(\"./request\");\nObject.defineProperty(exports, \"DatastoreRequest\", {\n  enumerable: true,\n  get: function () {\n    return request_1.DatastoreRequest;\n  }\n});\nconst transaction_1 = require(\"./transaction\");\nObject.defineProperty(exports, \"Transaction\", {\n  enumerable: true,\n  get: function () {\n    return transaction_1.Transaction;\n  }\n});\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst aggregate_2 = require(\"./aggregate\");\nconst {\n  grpc\n} = new google_gax_1.GrpcClient();\n// Import the clients for each version supported by this package.\nconst gapic = Object.freeze({\n  v1: require('./v1')\n});\nconst urlSafeKey = new entity_1.entity.URLSafeKey();\n/**\n * Idiomatic class for interacting with Cloud Datastore. Uses the lower-level\n * {@link DatastoreClient} class under the hood.\n *\n * In addition to the constructor options shown here, the {@link Datastore}\n * class constructor accepts the same options accepted by\n * {@link DatastoreClient}.\n *\n * <h4>The Datastore Emulator</h4>\n *\n * Make sure you have the <a href=\"https://cloud.google.com/sdk/downloads\">\n * gcloud SDK installed</a>, then run:\n *\n * <pre>\n *   $ gcloud beta emulators datastore start --no-legacy\n * </pre>\n *\n * You will see the following printed:\n *\n * <pre>\n *   [datastore] API endpoint: http://localhost:8005\n *   [datastore] If you are using a library that supports the\n *               DATASTORE_EMULATOR_HOST environment variable, run:\n *   [datastore]\n *   [datastore]   export DATASTORE_EMULATOR_HOST=localhost:8005\n *   [datastore]\n *   [datastore] Dev App Server is now running.\n * </pre>\n *\n * Set that environment variable and your localhost Datastore will\n * automatically be used. You can also pass this address in manually with\n * `apiEndpoint`.\n *\n * Additionally, `DATASTORE_PROJECT_ID` is recognized. If you have this set,\n * you don't need to provide a `projectId`.\n *\n *\n * See {@link https://cloud.google.com/datastore/docs/concepts/overview| Cloud Datastore Concepts Overview}\n *\n * @param {object} [options] Configuration options.\n * @param {string} [options.apiEndpoint] Override the default API endpoint used\n *     to reach Datastore. This is useful for connecting to your local Datastore\n *     server (usually \"http://localhost:8080\").\n * @param {string} [options.namespace] Namespace to isolate transactions to.\n *\n * @example Import the client library\n * ```\n * const {Datastore} = require('@google-cloud/datastore');\n *\n * ```\n * @example Create a client that uses <a href=\"https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\">Application Default Credentials (ADC)</a>:\n * ```\n * const datastore = new Datastore();\n *\n * ```\n * @example Create a client with <a href=\"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually\">explicit credentials</a>:\n * ```\n * const datastore = new Datastore({\n *   projectId: 'your-project-id',\n *   keyFilename: '/path/to/keyfile.json'\n * });\n *\n * ```\n * @example Retrieving Records\n * ```\n * const {Datastore} = require('@google-cloud/datastore');\n * const datastore = new Datastore();\n *\n * // Records, called \"entities\" in Datastore, are retrieved by using a key. The\n * // key is more than a numeric identifier, it is a complex data structure that\n * // can be used to model relationships. The simplest key has a string `kind`\n * // value, and either a numeric `id` value, or a string `name` value.\n * //\n * // A single record can be retrieved with {@link Datastore#key} and\n * // {@link Datastore#get}.\n * //-\n * const key = datastore.key(['Company', 'Google']);\n *\n * datastore.get(key, function(err, entity) {\n *   // entity = The record.\n *   // entity[datastore.KEY] = The key for this entity.\n * });\n *\n * //-\n * // <h3>Querying Records</h3>\n * //\n * // Create a query with {@link Datastore#createQuery}.\n * //-\n * const query = datastore.createQuery('Company');\n *\n * //-\n * // Multiple records can be found that match criteria with\n * // {@link Query#filter}.\n * //-\n * query.filter('location', 'CA');\n *\n * //-\n * // Records can also be ordered with {@link Query#order}.\n * //-\n * query.order('name');\n *\n * //-\n * // The number of records returned can be specified with\n * // {@link Query#limit}.\n * //-\n * query.limit(5);\n *\n * //-\n * // Records' key structures can also be queried with\n * // {@link Query#hasAncestor}.\n * //-\n * const ancestorKey = datastore.key(['ParentCompany', 'Alphabet']);\n *\n * query.hasAncestor(ancestorKey);\n *\n * //-\n * // Run the query with {@link Datastore#runQuery}.\n * //-\n * datastore.runQuery(query, (err, entities) => {\n *   // entities = An array of records.\n *\n *   // Access the Key object for an entity.\n *   const firstEntityKey = entities[0][datastore.KEY];\n * });\n *\n * ```\n * @example Paginating Records\n * ```\n * // Imagine building a website that allows a user to sift through hundreds of\n * // their contacts. You'll likely want to only display a subset of these at\n * // once, so you set a limit.\n * //-\n * const express = require('express');\n * const app = express();\n *\n * const NUM_RESULTS_PER_PAGE = 15;\n *\n * app.get('/contacts', (req, res) => {\n *   const query = datastore.createQuery('Contacts')\n *     .limit(NUM_RESULTS_PER_PAGE);\n *\n *   if (req.query.nextPageCursor) {\n *     query.start(req.query.nextPageCursor);\n *   }\n *\n *   datastore.runQuery(query, (err, entities, info) => {\n *     if (err) {\n *       // Error handling omitted.\n *       return;\n *     }\n *\n *     // Respond to the front end with the contacts and the cursoring token\n *     // from the query we just ran.\n *     const frontEndResponse = {\n *       contacts: entities\n *     };\n *\n *     // Check if  more results may exist.\n *     if (info.moreResults !== datastore.NO_MORE_RESULTS) {\n *       frontEndResponse.nextPageCursor = info.endCursor;\n *     }\n *\n *     res.render('contacts', frontEndResponse);\n *   });\n * });\n *\n * ```\n * @example Creating Records\n * ```\n * // New entities can be created and persisted with {@link Datastore#save}.\n * // The entity must have a key to be saved. If you don't specify an\n * // identifier for the key, one is generated for you.\n * //\n * // We will create a key with a `name` identifier, \"Google\".\n * //-\n * const key = datastore.key(['Company', 'Google']);\n *\n * const data = {\n *   name: 'Google',\n *   location: 'CA'\n * };\n *\n * datastore.save({\n *   key: key,\n *   data: data\n * }, (err) => {\n *   if (!err) {\n *     // Record saved successfully.\n *   }\n * });\n *\n * //-\n * // We can verify the data was saved by using {@link Datastore#get}.\n * //-\n * datastore.get(key, (err, entity) => {\n *   // entity = {\n *   //   name: 'Google',\n *   //   location: 'CA'\n *   // }\n * });\n *\n * //-\n * // If we want to update this record, we can modify the data object and re-\n * // save it.\n * //-\n * data.symbol = 'GOOG';\n *\n * datastore.save({\n *   key: key, // defined above (datastore.key(['Company', 'Google']))\n *   data: data\n * }, (err, entity) => {\n *   if (!err) {\n *     // Record updated successfully.\n *   }\n * });\n *\n * ```\n * @example Deleting Records\n * ```\n * // Entities can be removed from Datastore by passing the entity's key object\n * // to {@link Datastore#delete}.\n * //-\n * const key = datastore.key(['Company', 'Google']);\n *\n * datastore.delete(key, (err) => {\n *   if (!err) {\n *     // Record deleted successfully.\n *   }\n * });\n *\n * ```\n * @example Transactions\n * ```\n * // Complex logic can be wrapped in a transaction with\n * // {@link Datastore#transaction}. All queries and updates run within\n * // the transaction will be applied when the `done` function is called.\n * //-\n * const transaction = datastore.transaction();\n *\n * transaction.run((err) => {\n *   if (err) {\n *     // Error handling omitted.\n *   }\n *\n *   const key = datastore.key(['Company', 'Google']);\n *\n *   transaction.get(key, (err, entity) => {\n *     if (err) {\n *       // Error handling omitted.\n *     }\n *\n *     entity.symbol = 'GOOG';\n *\n *     transaction.save(entity);\n *\n *     transaction.commit((err) => {\n *       if (!err) {\n *         // Transaction committed successfully.\n *       }\n *     });\n *   });\n * });\n *\n * ```\n * @example Queries with Ancestors\n * ```\n * const {Datastore} = require('@google-cloud/datastore');\n * const datastore = new Datastore();\n *\n * const customerId1 = 2993844;\n * const customerId2 = 4993882;\n * const customerKey1 = datastore.key(['Customer', customerId1]);\n * const customerKey2 = datastore.key(['Customer', customerId2]);\n * const cookieKey1 = datastore.key(['Customer', customerId1, 'Cookie',\n * 'cookie28839']); // child entity const cookieKey2 =\n * datastore.key(['Customer', customerId1, 'Cookie', 'cookie78984']); // child\n * entity const cookieKey3 = datastore.key(['Customer', customerId2, 'Cookie',\n * 'cookie93911']); // child entity\n *\n * const entities = [];\n *\n * entities.push({\n *   key: customerKey1,\n *   data: {\n *     name: 'Jane Doe',\n *     address: '4848 Liller'\n *   }\n * });\n *\n * entities.push({\n *   key: customerKey2,\n *   data: {\n *     name: 'John Smith',\n *     address: '4848 Pine'\n *   }\n * });\n *\n * entities.push({\n *   key: cookieKey1,\n *   data: {\n *     cookieVal: 'dj83kks88rkld'\n *   }\n * });\n *\n * entities.push({\n *   key: cookieKey2,\n *   data: {\n *     cookieVal: 'sj843ka99s'\n *   }\n * });\n *\n * entities.push({\n *   key: cookieKey3,\n *   data: {\n *     cookieVal: 'otk82k2kw'\n *   }\n * });\n *\n * datastore.upsert(entities);\n *\n * const query = datastore.createQuery().hasAncestor(customerKey1);\n *\n * datastore.runQuery(query, (err, entities) => {\n *   for (let entity of entities) {\n *     console.log(entity[datastore.KEY]);\n *   }\n * });\n *\n * const query2 = datastore.createQuery().hasAncestor(customerKey2);\n *\n * datastore.runQuery(query2, (err, entities) => {\n *   for (let entity of entities) {\n *     console.log(entity[datastore.KEY]);\n *   }\n * });\n *\n * datastore.runQuery(query2, (entities) => {\n *   console.log(entities);\n * });\n * ```\n */\nclass Datastore extends request_1.DatastoreRequest {\n  constructor(options) {\n    var _a;\n    var _b;\n    super();\n    this.KEY = Datastore.KEY;\n    this.MORE_RESULTS_AFTER_CURSOR = Datastore.MORE_RESULTS_AFTER_CURSOR;\n    this.MORE_RESULTS_AFTER_LIMIT = Datastore.MORE_RESULTS_AFTER_LIMIT;\n    this.NO_MORE_RESULTS = Datastore.NO_MORE_RESULTS;\n    /**\n     * {@link DatastoreRequest} class.\n     *\n     * @name Datastore.DatastoreRequest\n     * @see DatastoreRequest\n     * @type {constructor}\n     */\n    this.DatastoreRequest = request_1.DatastoreRequest;\n    /**\n     * {@link Query} class.\n     *\n     * @name Datastore.Query\n     * @see Query\n     * @type {constructor}\n     */\n    this.Query = query_1.Query;\n    /**\n     * {@link Transaction} class.\n     *\n     * @name Datastore.Transaction\n     * @see Transaction\n     * @type {constructor}\n     */\n    this.Transaction = transaction_1.Transaction;\n    options = options || {};\n    this.clients_ = new Map();\n    this.datastore = this;\n    /**\n     * @name Datastore#namespace\n     * @type {string}\n     */\n    this.namespace = options.namespace;\n    options.projectId = options.projectId || process.env.DATASTORE_PROJECT_ID;\n    this.defaultBaseUrl_ = 'datastore.googleapis.com';\n    this.determineBaseUrl_(options.apiEndpoint);\n    const scopes = Array.from(new Set([...gapic.v1.DatastoreClient.scopes, ...gapic.v1.DatastoreAdminClient.scopes]));\n    this.options = Object.assign({\n      libName: 'gccl',\n      libVersion: require('../../package.json').version,\n      scopes,\n      servicePath: this.baseUrl_,\n      port: typeof this.port_ === 'number' ? this.port_ : 443\n    }, options);\n    const isUsingLocalhost = this.baseUrl_ && (this.baseUrl_.includes('localhost') || this.baseUrl_.includes('127.0.0.1') || this.baseUrl_.includes('::1'));\n    const isEmulatorVariableSet = process.env.DATASTORE_EMULATOR_HOST;\n    const isUsingEmulator = isUsingLocalhost || isEmulatorVariableSet;\n    if (this.customEndpoint_ && isUsingEmulator) {\n      (_a = (_b = this.options).sslCreds) !== null && _a !== void 0 ? _a : _b.sslCreds = grpc.credentials.createInsecure();\n    }\n    this.auth = new google_gax_1.GoogleAuth(this.options);\n  }\n  /**\n   * Create an aggregation query from a Query.\n   *\n   * @param {Query} query A Query object.\n   */\n  createAggregationQuery(query) {\n    return new aggregate_2.AggregateQuery(query);\n  }\n  export(config, callback) {\n    const reqOpts = {\n      entityFilter: {},\n      ...config\n    };\n    if (reqOpts.bucket && reqOpts.outputUrlPrefix) {\n      throw new Error('Both `bucket` and `outputUrlPrefix` were provided.');\n    }\n    if (!reqOpts.outputUrlPrefix) {\n      if (typeof config.bucket === 'string') {\n        reqOpts.outputUrlPrefix = `gs://${config.bucket.replace('gs://', '')}`;\n      } else if (typeof config.bucket === 'object') {\n        reqOpts.outputUrlPrefix = `gs://${config.bucket.name}`;\n      } else {\n        throw new Error('A Bucket object or URL must be provided.');\n      }\n    }\n    if (reqOpts.kinds) {\n      if (typeof config.entityFilter === 'object') {\n        throw new Error('Both `entityFilter` and `kinds` were provided.');\n      }\n      reqOpts.entityFilter.kinds = reqOpts.kinds;\n    }\n    if (reqOpts.namespaces) {\n      if (typeof config.entityFilter === 'object') {\n        throw new Error('Both `entityFilter` and `namespaces` were provided.');\n      }\n      reqOpts.entityFilter.namespaceIds = reqOpts.namespaces;\n    }\n    delete reqOpts.bucket;\n    delete reqOpts.gaxOptions;\n    delete reqOpts.kinds;\n    delete reqOpts.namespaces;\n    this.request_({\n      client: 'DatastoreAdminClient',\n      method: 'exportEntities',\n      reqOpts: reqOpts,\n      gaxOpts: config.gaxOptions\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback);\n  }\n  getIndexes(optionsOrCallback, cb) {\n    let options = typeof optionsOrCallback === 'object' ? optionsOrCallback : {};\n    const callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : cb;\n    options = extend(true, {}, options);\n    const gaxOpts = options.gaxOptions || {};\n    const reqOpts = {\n      pageSize: gaxOpts.pageSize,\n      pageToken: gaxOpts.pageToken,\n      ...options\n    };\n    delete gaxOpts.pageSize;\n    delete gaxOpts.pageToken;\n    delete reqOpts.autoPaginate;\n    delete reqOpts.gaxOptions;\n    if (typeof options.autoPaginate === 'boolean' && typeof gaxOpts.autoPaginate === 'undefined') {\n      gaxOpts.autoPaginate = options.autoPaginate;\n    }\n    this.request_({\n      client: 'DatastoreAdminClient',\n      method: 'listIndexes',\n      reqOpts,\n      gaxOpts\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (err, ...resp) => {\n      let indexes = [];\n      if (resp[0]) {\n        indexes = resp[0].map(index => {\n          const indexInstance = this.index(index.indexId);\n          indexInstance.metadata = index;\n          return indexInstance;\n        });\n      }\n      const nextQuery = resp[1] ? Object.assign(options, resp[1]) : null;\n      const apiResp = resp[2];\n      callback(err, indexes, nextQuery, apiResp);\n    });\n  }\n  /**\n   * Get all of the indexes in this project as a readable object stream.\n   *\n   * @param {GetIndexesOptions} [options] Configuration object. See\n   *     {@link Datastore#getIndexes} for a complete list of options.\n   * @returns {ReadableStream<Index>}\n   */\n  getIndexesStream(options) {\n    const {\n      gaxOptions,\n      ...reqOpts\n    } = options || {};\n    return (0, stream_1.pipeline)(this.requestStream_({\n      client: 'DatastoreAdminClient',\n      method: 'listIndexesStream',\n      reqOpts,\n      gaxOpts: gaxOptions\n    }), new stream_1.Transform({\n      objectMode: true,\n      transform: (index, enc, next) => {\n        const indexInstance = this.index(index.indexId);\n        indexInstance.metadata = index;\n        next(null, indexInstance);\n      }\n    }), () => {});\n  }\n  /**\n   * Gets the database id that all requests will be run against.\n   *\n   * @returns {string} The database id that the current client is set to that\n   *    requests will run against.\n   */\n  getDatabaseId() {\n    return this.options.databaseId;\n  }\n  getProjectId() {\n    return this.auth.getProjectId();\n  }\n  import(config, callback) {\n    const reqOpts = {\n      entityFilter: {},\n      ...config\n    };\n    if (config.file && config.inputUrl) {\n      throw new Error('Both `file` and `inputUrl` were provided.');\n    }\n    if (!reqOpts.inputUrl) {\n      if (typeof config.file === 'string') {\n        reqOpts.inputUrl = `gs://${config.file.replace('gs://', '')}`;\n      } else if (typeof config.file === 'object') {\n        reqOpts.inputUrl = `gs://${config.file.bucket.name}/${config.file.name}`;\n      } else {\n        throw new Error('An input URL must be provided.');\n      }\n    }\n    if (reqOpts.kinds) {\n      if (typeof config.entityFilter === 'object') {\n        throw new Error('Both `entityFilter` and `kinds` were provided.');\n      }\n      reqOpts.entityFilter.kinds = reqOpts.kinds;\n    }\n    if (reqOpts.namespaces) {\n      if (typeof config.entityFilter === 'object') {\n        throw new Error('Both `entityFilter` and `namespaces` were provided.');\n      }\n      reqOpts.entityFilter.namespaceIds = reqOpts.namespaces;\n    }\n    delete reqOpts.file;\n    delete reqOpts.gaxOptions;\n    delete reqOpts.kinds;\n    delete reqOpts.namespaces;\n    this.request_({\n      client: 'DatastoreAdminClient',\n      method: 'importEntities',\n      reqOpts: reqOpts,\n      gaxOpts: config.gaxOptions\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback);\n  }\n  /**\n   * Get a reference to an Index.\n   *\n   * @param {string} id The index name or id.\n   * @returns {Index}\n   */\n  index(id) {\n    return new index_class_1.Index(this, id);\n  }\n  insert(entities, callback) {\n    entities = arrify(entities).map(request_1.DatastoreRequest.prepareEntityObject_).map(x => {\n      x.method = 'insert';\n      return x;\n    });\n    this.save(entities, callback);\n  }\n  save(entities, gaxOptionsOrCallback, cb) {\n    entities = arrify(entities);\n    const gaxOptions = typeof gaxOptionsOrCallback === 'object' ? gaxOptionsOrCallback : {};\n    const callback = typeof gaxOptionsOrCallback === 'function' ? gaxOptionsOrCallback : cb;\n    const insertIndexes = {};\n    const mutations = [];\n    const methods = {\n      insert: true,\n      update: true,\n      upsert: true\n    };\n    // Iterate over the entity objects, build a proto from all keys and values,\n    // then place in the correct mutation array (insert, update, etc).\n    entities.map(request_1.DatastoreRequest.prepareEntityObject_).forEach((entityObject, index) => {\n      const mutation = {};\n      let entityProto = {};\n      let method = 'upsert';\n      if (entityObject.method) {\n        if (methods[entityObject.method]) {\n          method = entityObject.method;\n        } else {\n          throw new Error('Method ' + entityObject.method + ' not recognized.');\n        }\n      }\n      if (entityObject.excludeLargeProperties) {\n        entityObject.excludeFromIndexes = entity_1.entity.findLargeProperties_(entityObject.data, '', entityObject.excludeFromIndexes);\n      }\n      if (!entity_1.entity.isKeyComplete(entityObject.key)) {\n        insertIndexes[index] = true;\n      }\n      // @TODO remove in @google-cloud/datastore@2.0.0\n      // This was replaced with a more efficient mechanism in the top-level\n      // `excludeFromIndexes` option.\n      if (Array.isArray(entityObject.data)) {\n        entityProto.properties = entityObject.data.reduce((acc, data) => {\n          const value = entity_1.entity.encodeValue(data.value, data.name.toString());\n          if (typeof data.excludeFromIndexes === 'boolean') {\n            const excluded = data.excludeFromIndexes;\n            let values = value.arrayValue && value.arrayValue.values;\n            if (values) {\n              values = values.map(x => {\n                x.excludeFromIndexes = excluded;\n                return x;\n              });\n            } else {\n              value.excludeFromIndexes = data.excludeFromIndexes;\n            }\n          }\n          acc[data.name] = value;\n          return acc;\n        }, {});\n      } else {\n        entityProto = entity_1.entity.entityToEntityProto(entityObject);\n      }\n      entityProto.key = entity_1.entity.keyToKeyProto(entityObject.key);\n      mutation[method] = entityProto;\n      mutations.push(mutation);\n    });\n    const reqOpts = {\n      mutations\n    };\n    function onCommit(err, resp) {\n      if (err || !resp) {\n        callback(err, resp);\n        return;\n      }\n      arrify(resp.mutationResults).forEach((result, index) => {\n        if (!result.key) {\n          return;\n        }\n        if (insertIndexes[index]) {\n          const id = entity_1.entity.keyFromKeyProto(result.key).id;\n          entities[index].key.id = id;\n        }\n      });\n      callback(null, resp);\n    }\n    if (this.id) {\n      this.requests_.push(reqOpts);\n      this.requestCallbacks_.push(onCommit);\n      return;\n    }\n    this.request_({\n      client: 'DatastoreClient',\n      method: 'commit',\n      reqOpts,\n      gaxOpts: gaxOptions\n    }, onCommit);\n  }\n  update(entities, callback) {\n    entities = arrify(entities).map(request_1.DatastoreRequest.prepareEntityObject_).map(x => {\n      x.method = 'update';\n      return x;\n    });\n    this.save(entities, callback);\n  }\n  upsert(entities, callback) {\n    entities = arrify(entities).map(request_1.DatastoreRequest.prepareEntityObject_).map(x => {\n      x.method = 'upsert';\n      return x;\n    });\n    this.save(entities, callback);\n  }\n  /**\n   * Helper function to get a Datastore Double object.\n   *\n   * @param {number} value The double value.\n   * @returns {object}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const threeDouble = datastore.double(3.0);\n   * ```\n   */\n  static double(value) {\n    return new entity_1.entity.Double(value);\n  }\n  double(value) {\n    return Datastore.double(value);\n  }\n  /**\n   * Helper function to check if something is a Datastore Double object.\n   *\n   * @param {*} value\n   * @returns {boolean}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * datastore.isDouble(0.42); // false\n   * datastore.isDouble(datastore.double(0.42)); // true\n   * ```\n   */\n  static isDouble(value) {\n    return entity_1.entity.isDsDouble(value);\n  }\n  isDouble(value) {\n    return Datastore.isDouble(value);\n  }\n  /**\n   * Helper function to get a Datastore Geo Point object.\n   *\n   * @param {object} coordinates Coordinate value.\n   * @param {number} coordinates.latitude Latitudinal value.\n   * @param {number} coordinates.longitude Longitudinal value.\n   * @returns {object}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const coordinates = {\n   *   latitude: 40.6894,\n   *   longitude: -74.0447\n   * };\n   *\n   * const geoPoint = datastore.geoPoint(coordinates);\n   *\n   * //-\n   * // List all companies that are located at 40.123 latitude\n   * // and -74.0447 longitude.\n   * //-\n   * const query = datastore.createQuery('Company');\n   * const companyQuery = query\n   *   .filter('geoPoint.latitude', datastore.double(40.123))\n   *   .filter('geoPoint.longitude', datastore.double(-74.0447));\n   * ```\n   */\n  static geoPoint(coordinates) {\n    return new entity_1.entity.GeoPoint(coordinates);\n  }\n  geoPoint(coordinates) {\n    return Datastore.geoPoint(coordinates);\n  }\n  /**\n   * Helper function to check if something is a Datastore Geo Point object.\n   *\n   * @param {*} value\n   * @returns {boolean}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const coordinates = {\n   *   latitude: 0,\n   *   longitude: 0\n   * };\n   *\n   * datastore.isGeoPoint(coordinates); // false\n   * datastore.isGeoPoint(datastore.geoPoint(coordinates)); // true\n   * ```\n   */\n  static isGeoPoint(value) {\n    return entity_1.entity.isDsGeoPoint(value);\n  }\n  isGeoPoint(value) {\n    return Datastore.isGeoPoint(value);\n  }\n  /**\n   * Helper function to get a Datastore Integer object.\n   *\n   * This is also useful when using an ID outside the bounds of a JavaScript\n   * Number object.\n   *\n   * @param {number} value The integer value.\n   * @returns {object}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const sevenInteger = datastore.int(7);\n   *\n   * //-\n   * // Create an Int to support long Key IDs.\n   * //-\n   * const key = datastore.key([\n   *   'Kind',\n   *   datastore.int('100000000000001234')\n   * ]);\n   * ```\n   */\n  static int(value) {\n    return new entity_1.entity.Int(value);\n  }\n  int(value) {\n    return Datastore.int(value);\n  }\n  /**\n   * Helper function to check if something is a Datastore Integer object.\n   *\n   * @param {*} value\n   * @returns {boolean}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * datastore.isInt(42); // false\n   * datastore.isInt(datastore.int(42)); // true\n   * ```\n   */\n  static isInt(value) {\n    return entity_1.entity.isDsInt(value);\n  }\n  isInt(value) {\n    return Datastore.isInt(value);\n  }\n  createQuery(namespaceOrKind, kind) {\n    let namespace = namespaceOrKind;\n    if (!kind) {\n      kind = namespaceOrKind;\n      namespace = this.namespace;\n    }\n    return new query_1.Query(this, namespace, arrify(kind));\n  }\n  key(options) {\n    const keyOptions = is.object(options) ? options : {\n      namespace: this.namespace,\n      path: arrify(options)\n    };\n    return new entity_1.entity.Key(keyOptions);\n  }\n  /**\n   * Helper function to check if something is a Datastore Key object.\n   *\n   * @param {*} value\n   * @returns {boolean}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * datastore.isKey({path: ['Company', 123]}); // false\n   * datastore.isKey(datastore.key(['Company', 123])); // true\n   * ```\n   */\n  static isKey(value) {\n    return entity_1.entity.isDsKey(value);\n  }\n  isKey(value) {\n    return Datastore.isKey(value);\n  }\n  keyToLegacyUrlSafe(key, locationPrefixOrCallback, callback) {\n    const locationPrefix = typeof locationPrefixOrCallback === 'string' ? locationPrefixOrCallback : '';\n    callback = typeof locationPrefixOrCallback === 'function' ? locationPrefixOrCallback : callback;\n    this.auth.getProjectId((err, projectId) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null, urlSafeKey.legacyEncode(projectId, key, locationPrefix));\n    });\n  }\n  /**\n   * Helper to convert URL safe key string to entity key object\n   *\n   * This is intended to work with the \"legacy\" representation of a\n   * datastore \"Key\" used within Google App Engine (a so-called \"Reference\").\n   *\n   * @param {entity.Key} key Entity key object.\n   * @param {string} locationPrefix Optional .\n   *  The location prefix of an App Engine project ID.\n   *  Often this value is 's~', but may also be 'e~', or other location prefixes\n   *  currently unknown.\n   * @returns {string} Created urlsafe key.\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const urlSafeKey = 'ag9ncmFzcy1jbHVtcC00NzlyEwsSB0NvbXBhbnkiBkdvb2dsZQw';\n   *\n   * datastore.keyFromLegacyUrlsafe(key);\n   *\n   * ```\n   */\n  keyFromLegacyUrlsafe(key) {\n    return urlSafeKey.legacyDecode(key);\n  }\n  /**\n   * Create a new Transaction object.\n   *\n   * @param {object} [options] Configuration object.\n   * @param {string} [options.id] The ID of a previously run transaction.\n   * @param {boolean} [options.readOnly=false] A read-only transaction cannot\n   *     modify entities.\n   * @returns {Transaction}\n   *\n   * @example\n   * ```\n   * const {Datastore} = require('@google-cloud/datastore');\n   * const datastore = new Datastore();\n   * const transaction = datastore.transaction();\n   * ```\n   */\n  transaction(options) {\n    return new transaction_1.Transaction(this, options);\n  }\n  /**\n   * Determine the appropriate endpoint to use for API requests. If not\n   * explicitly defined, check for the \"DATASTORE_EMULATOR_HOST\" environment\n   * variable, used to connect to a local Datastore server.\n   *\n   * @private\n   *\n   * @param {string} customApiEndpoint Custom API endpoint.\n   */\n  determineBaseUrl_(customApiEndpoint) {\n    let baseUrl = this.defaultBaseUrl_;\n    const leadingProtocol = new RegExp('^https*://');\n    const trailingSlashes = new RegExp('/*$');\n    const port = new RegExp(':(\\\\d+)');\n    if (customApiEndpoint) {\n      baseUrl = customApiEndpoint;\n      this.customEndpoint_ = true;\n    } else if (process.env.DATASTORE_EMULATOR_HOST) {\n      baseUrl = process.env.DATASTORE_EMULATOR_HOST;\n      this.customEndpoint_ = true;\n    }\n    if (port.test(baseUrl)) {\n      this.port_ = Number(baseUrl.match(port)[1]);\n    }\n    this.baseUrl_ = baseUrl.replace(leadingProtocol, '').replace(port, '').replace(trailingSlashes, '');\n  }\n}\nexports.Datastore = Datastore;\n/**\n * Access the Key from an Entity object.\n *\n * @name Datastore.KEY\n * @type {symbol}\n */\n/**\n * Access the Key from an Entity object.\n *\n * @name Datastore#KEY\n * @type {symbol}\n */\nDatastore.KEY = entity_1.entity.KEY_SYMBOL;\n/**\n * This is one of three values which may be returned from\n * {@link Datastore#runQuery}, {@link Transaction#runQuery}, and\n * {@link Query#run} as `info.moreResults`.\n *\n * There *may* be more results after the specified end cursor.\n *\n * @type {string}\n */\nDatastore.MORE_RESULTS_AFTER_CURSOR = 'MORE_RESULTS_AFTER_CURSOR';\n/**\n * This is one of three values which may be returned from\n * {@link Datastore#runQuery}, {@link Transaction#runQuery}, and\n * {@link Query#run} as `info.moreResults`.\n *\n * There *may* be more results after the specified limit.\n *\n * @type {string}\n */\nDatastore.MORE_RESULTS_AFTER_LIMIT = 'MORE_RESULTS_AFTER_LIMIT';\n/**\n * This is one of three values which may be returned from\n * {@link Datastore#runQuery}, {@link Transaction#runQuery}, and\n * {@link Query#run} as `info.moreResults`.\n *\n * There are no more results left to query for.\n *\n * @type {string}\n */\nDatastore.NO_MORE_RESULTS = 'NO_MORE_RESULTS';\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\n(0, promisify_1.promisifyAll)(Datastore, {\n  exclude: ['createAggregationQuery', 'double', 'isDouble', 'geoPoint', 'getDatabaseId', 'getProjectId', 'isGeoPoint', 'index', 'int', 'isInt', 'createQuery', 'key', 'isKey', 'keyFromLegacyUrlsafe', 'transaction']\n});\n/**\n * The default export of the `@google-cloud/datastore` package is the\n * {@link Datastore} class.\n *\n * See the {@link Datastore} class for client methods and configuration options.\n *\n * @module {Datastore} @google-cloud/datastore\n * @alias nodejs-datastore\n *\n * @example Install the client library with <a href=\"https://www.npmjs.com/\">npm</a>:\n * ```\n * npm install --save\n * ```\n * @google-cloud/datastore\n *\n * @example Import the client library\n * ```\n * const {Datastore} = require('@google-cloud/datastore');\n *\n * ```\n * @example Create a client that uses <a href=\"https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\">Application Default Credentials (ADC)</a>:\n * ```\n * const datastore = new Datastore();\n *\n * ```\n * @example Create a client with <a href=\"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually\">explicit credentials</a>:\n * ```\n * const datastore = new Datastore({ projectId:\n * 'your-project-id', keyFilename: '/path/to/keyfile.json'\n * });\n *\n * ```\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:datastore_quickstart\n * Full quickstart example:\n */\n/**\n * @name Datastore.v1\n * @see v1.DatastoreClient\n * @type {object}\n * @property {constructor} DatastoreClient\n *     Reference to {@link v1.DatastoreClient}.\n */\n/**\n * @name module:@google-cloud/datastore.v1\n * @see v1.DatastoreClient\n * @type {object}\n * @property {constructor} DatastoreClient\n *     Reference to {@link v1.DatastoreClient}.\n */\nmodule.exports.v1 = gapic.v1;\nconst v1 = gapic.v1;\nexports.v1 = v1;\nvar v1_1 = require(\"./v1\");\nObject.defineProperty(exports, \"DatastoreClient\", {\n  enumerable: true,\n  get: function () {\n    return v1_1.DatastoreClient;\n  }\n});\nObject.defineProperty(exports, \"DatastoreAdminClient\", {\n  enumerable: true,\n  get: function () {\n    return v1_1.DatastoreAdminClient;\n  }\n});","map":{"version":3,"names":["arrify","require","extend","google_gax_1","is","stream_1","entity_1","aggregate_1","Object","defineProperty","exports","enumerable","get","AggregateField","Key","entity","filter_1","PropertyFilter","and","or","index_class_1","Index","query_1","Query","request_1","DatastoreRequest","transaction_1","Transaction","promisify_1","aggregate_2","grpc","GrpcClient","gapic","freeze","v1","urlSafeKey","URLSafeKey","Datastore","constructor","options","KEY","MORE_RESULTS_AFTER_CURSOR","MORE_RESULTS_AFTER_LIMIT","NO_MORE_RESULTS","clients_","Map","datastore","namespace","projectId","process","env","DATASTORE_PROJECT_ID","defaultBaseUrl_","determineBaseUrl_","apiEndpoint","scopes","Array","from","Set","DatastoreClient","DatastoreAdminClient","assign","libName","libVersion","version","servicePath","baseUrl_","port","port_","isUsingLocalhost","includes","isEmulatorVariableSet","DATASTORE_EMULATOR_HOST","isUsingEmulator","customEndpoint_","_a","_b","sslCreds","credentials","createInsecure","auth","GoogleAuth","createAggregationQuery","query","AggregateQuery","export","config","callback","reqOpts","entityFilter","bucket","outputUrlPrefix","Error","replace","name","kinds","namespaces","namespaceIds","gaxOptions","request_","client","method","gaxOpts","getIndexes","optionsOrCallback","cb","pageSize","pageToken","autoPaginate","err","resp","indexes","map","index","indexInstance","indexId","metadata","nextQuery","apiResp","getIndexesStream","pipeline","requestStream_","Transform","objectMode","transform","enc","next","getDatabaseId","databaseId","getProjectId","import","file","inputUrl","id","insert","entities","prepareEntityObject_","x","save","gaxOptionsOrCallback","insertIndexes","mutations","methods","update","upsert","forEach","entityObject","mutation","entityProto","excludeLargeProperties","excludeFromIndexes","findLargeProperties_","data","isKeyComplete","key","isArray","properties","reduce","acc","value","encodeValue","toString","excluded","values","arrayValue","entityToEntityProto","keyToKeyProto","push","onCommit","mutationResults","result","keyFromKeyProto","requests_","requestCallbacks_","double","Double","isDouble","isDsDouble","geoPoint","coordinates","GeoPoint","isGeoPoint","isDsGeoPoint","int","Int","isInt","isDsInt","createQuery","namespaceOrKind","kind","keyOptions","object","path","isKey","isDsKey","keyToLegacyUrlSafe","locationPrefixOrCallback","locationPrefix","legacyEncode","keyFromLegacyUrlsafe","legacyDecode","transaction","customApiEndpoint","baseUrl","leadingProtocol","RegExp","trailingSlashes","test","Number","match","KEY_SYMBOL","promisifyAll","exclude","module","v1_1"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}