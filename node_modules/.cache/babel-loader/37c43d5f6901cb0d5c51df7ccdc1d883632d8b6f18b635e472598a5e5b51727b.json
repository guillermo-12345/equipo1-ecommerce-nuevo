{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DatastoreAdminClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/datastore_admin_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./datastore_admin_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Google Cloud Datastore Admin API\n *\n *  The Datastore Admin API provides several admin services for Cloud Datastore.\n *\n *  Concepts: Project, namespace, kind, and entity as defined in the Google Cloud\n *  Datastore API.\n *\n *  Operation: An Operation represents work being performed in the background.\n *\n *  EntityFilter: Allows specifying a subset of entities in a project. This is\n *  specified as a combination of kinds and namespaces (either or both of which\n *  may be all).\n *\n *  Export/Import Service:\n *\n *  - The Export/Import service provides the ability to copy all or a subset of\n *  entities to/from Google Cloud Storage.\n *  - Exported data may be imported into Cloud Datastore for any Google Cloud\n *  Platform project. It is not restricted to the export source project. It is\n *  possible to export from one project and then import into another.\n *  - Exported data can also be loaded into Google BigQuery for analysis.\n *  - Exports and imports are performed asynchronously. An Operation resource is\n *  created for each export/import. The state (including any errors encountered)\n *  of the export/import may be queried via the Operation resource.\n *\n *  Index Service:\n *\n *  - The index service manages Cloud Datastore composite indexes.\n *  - Index creation and deletion are performed asynchronously.\n *  An Operation resource is created for each such asynchronous operation.\n *  The state of the operation (including any errors encountered)\n *  may be queried via the Operation resource.\n *\n *  Operation Service:\n *\n *  - The Operations collection provides a record of actions performed for the\n *  specified project (including any operations in progress). Operations are not\n *  created directly but through calls on other collections or resources.\n *  - An operation that is not yet done may be cancelled. The request to cancel\n *  is asynchronous and the operation may continue to run for some time after the\n *  request to cancel is made.\n *  - An operation that is done may be deleted so that it is no longer listed as\n *  part of the Operation collection.\n *  - ListOperations returns all pending operations, but not completed\n *  operations.\n *  - Operations are created by service DatastoreAdmin, but are accessed via\n *  service google.longrunning.Operations.\n * @class\n * @memberof v1\n */\nclass DatastoreAdminClient {\n  /**\n   * Construct an instance of DatastoreAdminClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new DatastoreAdminClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'datastore.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listIndexes: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'indexes')\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [{\n        selector: 'google.longrunning.Operations.CancelOperation',\n        post: '/v1/{name=projects/*/operations/*}:cancel'\n      }, {\n        selector: 'google.longrunning.Operations.DeleteOperation',\n        delete: '/v1/{name=projects/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.GetOperation',\n        get: '/v1/{name=projects/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.ListOperations',\n        get: '/v1/{name=projects/*}/operations'\n      }];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const exportEntitiesResponse = protoFilesRoot.lookup('.google.datastore.admin.v1.ExportEntitiesResponse');\n    const exportEntitiesMetadata = protoFilesRoot.lookup('.google.datastore.admin.v1.ExportEntitiesMetadata');\n    const importEntitiesResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n    const importEntitiesMetadata = protoFilesRoot.lookup('.google.datastore.admin.v1.ImportEntitiesMetadata');\n    const createIndexResponse = protoFilesRoot.lookup('.google.datastore.admin.v1.Index');\n    const createIndexMetadata = protoFilesRoot.lookup('.google.datastore.admin.v1.IndexOperationMetadata');\n    const deleteIndexResponse = protoFilesRoot.lookup('.google.datastore.admin.v1.Index');\n    const deleteIndexMetadata = protoFilesRoot.lookup('.google.datastore.admin.v1.IndexOperationMetadata');\n    this.descriptors.longrunning = {\n      exportEntities: new this._gaxModule.LongrunningDescriptor(this.operationsClient, exportEntitiesResponse.decode.bind(exportEntitiesResponse), exportEntitiesMetadata.decode.bind(exportEntitiesMetadata)),\n      importEntities: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importEntitiesResponse.decode.bind(importEntitiesResponse), importEntitiesMetadata.decode.bind(importEntitiesMetadata)),\n      createIndex: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createIndexResponse.decode.bind(createIndexResponse), createIndexMetadata.decode.bind(createIndexMetadata)),\n      deleteIndex: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteIndexResponse.decode.bind(deleteIndexResponse), deleteIndexMetadata.decode.bind(deleteIndexMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.datastore.admin.v1.DatastoreAdmin', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.datastoreAdminStub) {\n      return this.datastoreAdminStub;\n    }\n    // Put together the \"service stub\" for\n    // google.datastore.admin.v1.DatastoreAdmin.\n    this.datastoreAdminStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.datastore.admin.v1.DatastoreAdmin') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.datastore.admin.v1.DatastoreAdmin, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const datastoreAdminStubMethods = ['exportEntities', 'importEntities', 'createIndex', 'deleteIndex', 'getIndex', 'listIndexes'];\n    for (const methodName of datastoreAdminStubMethods) {\n      const callPromise = this.datastoreAdminStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.datastoreAdminStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'datastore.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'datastore.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/datastore'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  getIndex(request, optionsOrCallback, callback) {\n    var _a, _b;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : '',\n      index_id: (_b = request.indexId) !== null && _b !== void 0 ? _b : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getIndex(request, options, callback);\n  }\n  exportEntities(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.exportEntities(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `exportEntities()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/datastore_admin.export_entities.js</caption>\n   * region_tag:datastore_v1_generated_DatastoreAdmin_ExportEntities_async\n   */\n  async checkExportEntitiesProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportEntities, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  importEntities(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.importEntities(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `importEntities()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/datastore_admin.import_entities.js</caption>\n   * region_tag:datastore_v1_generated_DatastoreAdmin_ImportEntities_async\n   */\n  async checkImportEntitiesProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importEntities, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  createIndex(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createIndex(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `createIndex()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/datastore_admin.create_index.js</caption>\n   * region_tag:datastore_v1_generated_DatastoreAdmin_CreateIndex_async\n   */\n  async checkCreateIndexProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createIndex, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteIndex(request, optionsOrCallback, callback) {\n    var _a, _b;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : '',\n      index_id: (_b = request.indexId) !== null && _b !== void 0 ? _b : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteIndex(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deleteIndex()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/datastore_admin.delete_index.js</caption>\n   * region_tag:datastore_v1_generated_DatastoreAdmin_DeleteIndex_async\n   */\n  async checkDeleteIndexProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteIndex, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  listIndexes(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listIndexes(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.projectId\n   *   Project ID against which to make the request.\n   * @param {string} request.filter\n   * @param {number} request.pageSize\n   *   The maximum number of items to return.  If zero, then all results will be\n   *   returned.\n   * @param {string} request.pageToken\n   *   The next_page_token value returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.datastore.admin.v1.Index|Index} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listIndexesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listIndexesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listIndexes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listIndexes.createStream(this.innerApiCalls.listIndexes, request, callSettings);\n  }\n  /**\n   * Equivalent to `listIndexes`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.projectId\n   *   Project ID against which to make the request.\n   * @param {string} request.filter\n   * @param {number} request.pageSize\n   *   The maximum number of items to return.  If zero, then all results will be\n   *   returned.\n   * @param {string} request.pageToken\n   *   The next_page_token value returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.datastore.admin.v1.Index|Index}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/datastore_admin.list_indexes.js</caption>\n   * region_tag:datastore_v1_generated_DatastoreAdmin_ListIndexes_async\n   */\n  listIndexesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project_id: (_a = request.projectId) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listIndexes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listIndexes.asyncIterate(this.innerApiCalls['listIndexes'], request, callSettings);\n  }\n  /**\n   * Gets the latest state of a long-running operation.  Clients can use this\n   * method to poll the operation result at intervals as recommended by the API\n   * service.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   *   for the details.\n   * @param {function(?Error, ?Object)=} callback\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing\n   *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * @return {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing\n   * {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * The promise has a method named \"cancel\" which cancels the ongoing API call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * const name = '';\n   * const [response] = await client.getOperation({name});\n   * // doThingsWith(response)\n   * ```\n   */\n  getOperation(request, options, callback) {\n    return this.operationsClient.getOperation(request, options, callback);\n  }\n  /**\n   * Lists operations that match the specified filter in the request. If the\n   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n   *\n   * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation collection.\n   * @param {string} request.filter - The standard list filter.\n   * @param {number=} request.pageSize -\n   *   The maximum number of resources contained in the underlying API\n   *   response. If page streaming is performed per-resource, this\n   *   parameter does not affect the return value. If page streaming is\n   *   performed per-page, this determines the maximum number of\n   *   resources in a page.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   *   details.\n   * @returns {Object}\n   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * for await (const response of client.listOperationsAsync(request));\n   * // doThingsWith(response)\n   * ```\n   */\n  listOperationsAsync(request, options) {\n    return this.operationsClient.listOperationsAsync(request, options);\n  }\n  /**\n   * Starts asynchronous cancellation on a long-running operation.  The server\n   * makes a best effort to cancel the operation, but success is not\n   * guaranteed.  If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n   * {@link Operations.GetOperation} or\n   * other methods to check whether the cancellation succeeded or whether the\n   * operation completed despite cancellation. On successful cancellation,\n   * the operation is not deleted; instead, it becomes an operation with\n   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n   * 1, corresponding to `Code.CANCELLED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be cancelled.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   * details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.cancelOperation({name: ''});\n   * ```\n   */\n  cancelOperation(request, options, callback) {\n    return this.operationsClient.cancelOperation(request, options, callback);\n  }\n  /**\n   * Deletes a long-running operation. This method indicates that the client is\n   * no longer interested in the operation result. It does not cancel the\n   * operation. If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be deleted.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   * for the details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.deleteOperation({name: ''});\n   * ```\n   */\n  deleteOperation(request, options, callback) {\n    return this.operationsClient.deleteOperation(request, options, callback);\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.datastoreAdminStub && !this._terminated) {\n      return this.datastoreAdminStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.DatastoreAdminClient = DatastoreAdminClient;","map":{"version":3,"names":["jsonProtos","require","gapicConfig","version","DatastoreAdminClient","constructor","opts","gaxInstance","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_c","_b","_a","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","_d","fallback","_e","window","fetch","Object","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","listIndexes","PageDescriptor","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","protoJson","httpRules","selector","post","delete","get","operationsClient","lro","exportEntitiesResponse","lookup","exportEntitiesMetadata","importEntitiesResponse","importEntitiesMetadata","createIndexResponse","createIndexMetadata","deleteIndexResponse","deleteIndexMetadata","exportEntities","LongrunningDescriptor","decode","bind","importEntities","createIndex","deleteIndex","_defaults","constructSettings","join","innerApiCalls","warn","initialize","datastoreAdminStub","createStub","lookupService","google","datastore","admin","v1","DatastoreAdmin","datastoreAdminStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","getIndex","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","project_id","projectId","index_id","indexId","checkExportEntitiesProgress","name","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","checkImportEntitiesProgress","checkCreateIndexProgress","checkDeleteIndexProgress","listIndexesStream","defaultCallSettings","callSettings","merge","createStream","listIndexesAsync","asyncIterate","listOperationsAsync","cancelOperation","deleteOperation","close","resolve","exports"],"sources":["../../../src/v1/datastore_admin_client.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}