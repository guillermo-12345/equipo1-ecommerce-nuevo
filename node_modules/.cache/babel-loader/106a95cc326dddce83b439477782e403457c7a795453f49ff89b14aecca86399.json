{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\views\\\\CheckOut.jsx\",\n  _s = $RefreshSig$();\n/* import \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport {Timestamp,  addDoc, collection, documentId, where, writeBatch} from \"firebase/firestore\";\r\nimport { getDocs, query } from \"firebase/firestore\";\r\nimport { db } from \"../service/firebase/firebaseConfig\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = async ({ name, phone, email }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const objOrder = {\r\n        buyer: {\r\n          name,\r\n          phone,\r\n          email,\r\n        },\r\n        items: cart,\r\n        total: total,\r\n        date: Timestamp.fromDate(new Date()),\r\n      };\r\n      const batch = writeBatch(db);\r\n\r\n      const outOfStock = [];\r\n\r\n      const ids = cart.map((prod) => prod.id);\r\n\r\n      const productsRef = collection(db, \"items\");\r\n\r\n      const productsAddedFromFirestore = await getDocs(\r\n        query(productsRef, where(documentId(), \"in\", ids))\r\n      );\r\n\r\n      const { docs } = productsAddedFromFirestore;\r\n\r\n      docs.forEach((doc) => {\r\n        const dataDoc = doc.data();\r\n        const stockDb = dataDoc.stock;\r\n\r\n        const productAddedToCart = cart.find((prod) => prod.id === doc.id);\r\n        const prodQuantity = productAddedToCart?.quantity;\r\n\r\n        if (stockDb >= prodQuantity) {\r\n          batch.update(doc.ref, { stock: stockDb - prodQuantity });\r\n        } else {\r\n          outOfStock.push({ id: doc.id, ...dataDoc });\r\n        }\r\n      });\r\n\r\n      if (outOfStock.length === 0) {\r\n        await batch.commit();\r\n\r\n        const orderRef = collection(db, \"orders\");\r\n        const orderAdded = await addDoc(orderRef, objOrder);\r\n\r\n        setOrderId(orderAdded.id);\r\n        clearCart();\r\n      } else {\r\n        console.log(\"The following products are out of stock:\", outOfStock);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // TODO: Handle error and return feedback to the user\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se esta generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El id de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\" text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n */\n\nimport \"../App.css\";\nimport { useState, useContext } from \"react\";\nimport { CartContext } from \"../context/cartContext\";\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckOut = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [orderId, setOrderId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const {\n    cart,\n    total,\n    clearCart\n  } = useContext(CartContext);\n  const createOrder = ({\n    name,\n    phone,\n    email\n  }) => {\n    setLoading(true);\n    try {\n      const objOrder = {\n        buyer: {\n          name,\n          phone,\n          email\n        },\n        items: cart,\n        total: total,\n        date: new Date().toISOString()\n      };\n\n      // Simulate the order ID generation\n      const orderId = `order_${new Date().getTime()}`;\n      setOrderId(orderId);\n\n      // Save order to local storage\n      const orders = JSON.parse(localStorage.getItem('orders')) || [];\n      orders.push({\n        ...objOrder,\n        id: orderId\n      });\n      localStorage.setItem('orders', JSON.stringify(orders));\n      clearCart();\n    } catch (error) {\n      console.log(error);\n      // TODO: Handle error and return feedback to the user\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Se est\\xE1 generando su orden...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n  if (orderId) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"El ID de su orden es: \", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de tu compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), cart.map(({\n        id,\n        img,\n        title,\n        price,\n        quantity\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" text-uppercase fw-bolder\",\n          id: \"itemName\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio Unitario: $\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"80px\",\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cantidad: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total a pagar: $\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      onConfirm: createOrder,\n      formData: formData,\n      onInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckOut, \"eEV+TyugzwCM4KzgRLH4/2Tclr4=\");\n_c = CheckOut;\nexport default CheckOut;\nvar _c;\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["useState","useContext","CartContext","CheckoutForm","jsxDEV","_jsxDEV","CheckOut","_s","loading","setLoading","orderId","setOrderId","formData","setFormData","name","phone","email","cart","total","clearCart","createOrder","objOrder","buyer","items","date","Date","toISOString","getTime","orders","JSON","parse","localStorage","getItem","push","id","setItem","stringify","error","console","log","handleInputChange","e","value","target","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","img","title","price","quantity","width","src","alt","onConfirm","onInputChange","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/views/CheckOut.jsx"],"sourcesContent":["/* import \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport {Timestamp,  addDoc, collection, documentId, where, writeBatch} from \"firebase/firestore\";\r\nimport { getDocs, query } from \"firebase/firestore\";\r\nimport { db } from \"../service/firebase/firebaseConfig\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = async ({ name, phone, email }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const objOrder = {\r\n        buyer: {\r\n          name,\r\n          phone,\r\n          email,\r\n        },\r\n        items: cart,\r\n        total: total,\r\n        date: Timestamp.fromDate(new Date()),\r\n      };\r\n      const batch = writeBatch(db);\r\n\r\n      const outOfStock = [];\r\n\r\n      const ids = cart.map((prod) => prod.id);\r\n\r\n      const productsRef = collection(db, \"items\");\r\n\r\n      const productsAddedFromFirestore = await getDocs(\r\n        query(productsRef, where(documentId(), \"in\", ids))\r\n      );\r\n\r\n      const { docs } = productsAddedFromFirestore;\r\n\r\n      docs.forEach((doc) => {\r\n        const dataDoc = doc.data();\r\n        const stockDb = dataDoc.stock;\r\n\r\n        const productAddedToCart = cart.find((prod) => prod.id === doc.id);\r\n        const prodQuantity = productAddedToCart?.quantity;\r\n\r\n        if (stockDb >= prodQuantity) {\r\n          batch.update(doc.ref, { stock: stockDb - prodQuantity });\r\n        } else {\r\n          outOfStock.push({ id: doc.id, ...dataDoc });\r\n        }\r\n      });\r\n\r\n      if (outOfStock.length === 0) {\r\n        await batch.commit();\r\n\r\n        const orderRef = collection(db, \"orders\");\r\n        const orderAdded = await addDoc(orderRef, objOrder);\r\n\r\n        setOrderId(orderAdded.id);\r\n        clearCart();\r\n      } else {\r\n        console.log(\"The following products are out of stock:\", outOfStock);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // TODO: Handle error and return feedback to the user\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se esta generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El id de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\" text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n */\r\n\r\nimport \"../App.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { CartContext } from \"../context/cartContext\";\r\nimport CheckoutForm from \"../components/CheckoutForm/CheckoutForm\";\r\n\r\nconst CheckOut = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [formData, setFormData] = useState({ name: \"\", phone: \"\", email: \"\" });\r\n\r\n  const { cart, total, clearCart } = useContext(CartContext);\r\n\r\n  const createOrder = ({ name, phone, email }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const objOrder = {\r\n        buyer: {\r\n          name,\r\n          phone,\r\n          email,\r\n        },\r\n        items: cart,\r\n        total: total,\r\n        date: new Date().toISOString(),\r\n      };\r\n\r\n      // Simulate the order ID generation\r\n      const orderId = `order_${new Date().getTime()}`;\r\n      setOrderId(orderId);\r\n\r\n      // Save order to local storage\r\n      const orders = JSON.parse(localStorage.getItem('orders')) || [];\r\n      orders.push({ ...objOrder, id: orderId });\r\n      localStorage.setItem('orders', JSON.stringify(orders));\r\n\r\n      clearCart();\r\n    } catch (error) {\r\n      console.log(error);\r\n      // TODO: Handle error and return feedback to the user\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Se está generando su orden...</h1>;\r\n  }\r\n\r\n  if (orderId) {\r\n    return <h1>El ID de su orden es: {orderId}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h3>Resumen de tu compra</h3>\r\n        {cart.map(({ id, img, title, price, quantity }) => (\r\n          <div key={id}>\r\n            <p className=\" text-uppercase fw-bolder\" id=\"itemName\">\r\n              {title}\r\n            </p>\r\n            <p>Precio Unitario: ${price}</p>\r\n            <p>\r\n              <img width={\"80px\"} src={img} alt=\"\" />\r\n            </p>\r\n            <p>Cantidad: {quantity}</p>\r\n          </div>\r\n        ))}\r\n        <h4>Total a pagar: ${total}</h4>\r\n      </div>\r\n      <h3>Checkout</h3>\r\n      <CheckoutForm\r\n        onConfirm={createOrder}\r\n        formData={formData}\r\n        onInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}