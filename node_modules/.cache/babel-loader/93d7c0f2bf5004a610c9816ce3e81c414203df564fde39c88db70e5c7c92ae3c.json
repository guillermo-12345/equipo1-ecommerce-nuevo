{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\components\\\\ItemListContainer\\\\ItemListContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ItemList } from \"../ItemList/ItemList\";\nimport { useParams } from 'react-router-dom';\nimport { getProduct, getProductsByCategory, updateProduct } from '../../asyncMock';\nimport EditItemForm from '../EditItemForm/EditItemForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemListContainer = ({\n  greeting\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    categoryId\n  } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    const fetchProducts = categoryId ? getProductsByCategory(categoryId) : getProduct();\n    fetchProducts.then(response => {\n      setProducts(response);\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [categoryId]);\n  const handleSaveProduct = updatedProduct => {\n    updateProduct(updatedProduct).then(updated => {\n      const updatedProducts = products.map(prod => prod.id === updated.id ? updated : prod);\n      setProducts(updatedProducts);\n    }).catch(error => {\n      console.error('Error updating product:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-3 fw-bolder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"rounded-5 text-uppercase bd-blue-600\",\n      children: greeting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-dark-emphasis fw-bolder\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ItemList, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(EditItemForm, {\n          onSave: handleSaveProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ItemListContainer, \"IeKd/gN9FMrai/ZSHG7LZBXFV+w=\", false, function () {\n  return [useParams];\n});\n_c = ItemListContainer;\nexport default ItemListContainer;\nvar _c;\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"names":["React","useState","useEffect","ItemList","useParams","getProduct","getProductsByCategory","updateProduct","EditItemForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemListContainer","greeting","_s","products","setProducts","loading","setLoading","categoryId","fetchProducts","then","response","catch","error","console","log","finally","handleSaveProduct","updatedProduct","updated","updatedProducts","map","prod","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/ItemListContainer/ItemListContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ItemList } from \"../ItemList/ItemList\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getProduct, getProductsByCategory, updateProduct } from '../../asyncMock'; \r\nimport EditItemForm from '../EditItemForm/EditItemForm';\r\n\r\nconst ItemListContainer = ({ greeting }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const { categoryId } = useParams();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        const fetchProducts = categoryId ? getProductsByCategory(categoryId) : getProduct();\r\n\r\n        fetchProducts\r\n            .then(response => {\r\n                setProducts(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [categoryId]);\r\n\r\n    const handleSaveProduct = (updatedProduct) => {\r\n        updateProduct(updatedProduct)\r\n            .then(updated => {\r\n                const updatedProducts = products.map(prod => prod.id === updated.id ? updated : prod);\r\n                setProducts(updatedProducts);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error updating product:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='pt-3 fw-bolder'>\r\n            <h1 className='rounded-5 text-uppercase bd-blue-600'>{greeting}</h1>\r\n            <div className='text-dark-emphasis fw-bolder'>\r\n                {loading ? <div>...loading</div> : (\r\n                    <>\r\n                        <ItemList products={products} />\r\n                        <EditItemForm onSave={handleSaveProduct} />\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemListContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}