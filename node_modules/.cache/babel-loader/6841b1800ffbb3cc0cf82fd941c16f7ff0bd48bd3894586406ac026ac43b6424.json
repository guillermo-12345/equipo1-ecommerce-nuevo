{"ast":null,"code":"var _s = $RefreshSig$();\n// PurchaseForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// Configurar axios para usar la URL base correcta\naxios.defaults.baseURL = 'http://localhost:3001';\nconst PurchaseForm = ({\n  supplierId\n}) => {\n  _s();\n  const [purchase, setPurchase] = useState({\n    productId: '',\n    quantity: '',\n    price: '',\n    total: 0\n  });\n  const [supplier, setSupplier] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchSupplierData = async () => {\n      if (!supplierId) {\n        setError('ID de proveedor no proporcionado');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Usar las rutas correctas con /api\n        const supplierResponse = await axios.get(`/api/suppliers/${supplierId}`);\n        if (!supplierResponse.data) {\n          throw new Error('No se encontró el proveedor');\n        }\n        setSupplier(supplierResponse.data);\n        const productsResponse = await axios.get('/api/products', {\n          params: {\n            supplierId\n          }\n        });\n        if (!productsResponse.data) {\n          throw new Error('No se encontraron productos');\n        }\n        setProducts(productsResponse.data);\n\n        // Extraer categorías únicas\n        const uniqueCategories = [...new Set(productsResponse.data.map(p => p.category))];\n        setCategories(uniqueCategories);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error detallado:', error.response || error);\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al cargar datos del proveedor');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSupplierData();\n  }, [supplierId]);\n\n  // ... resto del componente\n};\n_s(PurchaseForm, \"jvig4x+IyI080BbX0flJaPIwvf0=\", false, function () {\n  return [useNavigate];\n});\n_c = PurchaseForm;\nexport default PurchaseForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Form","Button","Alert","defaults","baseURL","PurchaseForm","supplierId","_s","purchase","setPurchase","productId","quantity","price","total","supplier","setSupplier","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","loading","setLoading","error","setError","navigate","fetchSupplierData","supplierResponse","get","data","Error","productsResponse","params","uniqueCategories","Set","map","p","category","_error$response","_error$response$data","console","response","message","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/PurchaseForm/PurchaseForm.js"],"sourcesContent":["// PurchaseForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\n// Configurar axios para usar la URL base correcta\r\naxios.defaults.baseURL = 'http://localhost:3001';\r\n\r\nconst PurchaseForm = ({ supplierId }) => {\r\n  const [purchase, setPurchase] = useState({\r\n    productId: '',\r\n    quantity: '',\r\n    price: '',\r\n    total: 0\r\n  });\r\n  \r\n  const [supplier, setSupplier] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchSupplierData = async () => {\r\n      if (!supplierId) {\r\n        setError('ID de proveedor no proporcionado');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Usar las rutas correctas con /api\r\n        const supplierResponse = await axios.get(`/api/suppliers/${supplierId}`);\r\n        \r\n        if (!supplierResponse.data) {\r\n          throw new Error('No se encontró el proveedor');\r\n        }\r\n        \r\n        setSupplier(supplierResponse.data);\r\n\r\n        const productsResponse = await axios.get('/api/products', {\r\n          params: { supplierId }\r\n        });\r\n        \r\n        if (!productsResponse.data) {\r\n          throw new Error('No se encontraron productos');\r\n        }\r\n\r\n        setProducts(productsResponse.data);\r\n\r\n        // Extraer categorías únicas\r\n        const uniqueCategories = [...new Set(productsResponse.data.map(p => p.category))];\r\n        setCategories(uniqueCategories);\r\n        \r\n      } catch (error) {\r\n        console.error('Error detallado:', error.response || error);\r\n        setError(error.response?.data?.message || 'Error al cargar datos del proveedor');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSupplierData();\r\n  }, [supplierId]);\r\n\r\n  // ... resto del componente\r\n};\r\n\r\nexport default PurchaseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}