{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { onAuthStateChanged, signInWithPopup, signOut } from 'firebase/auth';\nimport { auth, googleProvider } from '../components/service/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst adminEmails = [\"guillermo.ibanezc@gmail.com\", \"trek0.88@gmail.com\"];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Configurar interceptor global de Axios\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(async config => {\n      if (auth.currentUser) {\n        const token = await auth.currentUser.getIdToken();\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n    return () => axios.interceptors.request.eject(interceptor);\n  }, []);\n  const fetchUserRoleAndMySQLId = async firebaseUser => {\n    if (!firebaseUser) return null;\n    try {\n      let clientData = null;\n\n      // Intentar obtener el cliente por correo electrónico\n      try {\n        const response = await axios.get(`http://localhost:3001/api/clients/email/${firebaseUser.email}`);\n        if (response.status === 200) {\n          clientData = response.data;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          // Si no se encuentra, crear un nuevo cliente\n          const newClient = {\n            name: firebaseUser.displayName || '',\n            email: firebaseUser.email,\n            cuit: '' // Se crea sin CUIT inicialmente\n          };\n          const createResponse = await axios.post('http://localhost:3001/api/clients', newClient);\n          if (createResponse.status === 201) {\n            clientData = createResponse.data;\n          }\n        } else {\n          throw error;\n        }\n      }\n\n      // Asignar el rol basado en el correo del usuario\n      if (clientData) {\n        const isAdmin = adminEmails.includes(firebaseUser.email);\n        return {\n          ...firebaseUser,\n          role: isAdmin ? 'admin' : 'user',\n          isAdmin,\n          mysqlId: clientData.id\n        };\n      }\n    } catch (error) {\n      console.error('Error al obtener el rol del usuario o registrar en MySQL:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      setLoading(true);\n      if (firebaseUser) {\n        const userWithRole = await fetchUserRoleAndMySQLId(firebaseUser);\n        setUser(userWithRole);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const loginWithGoogle = async () => {\n    try {\n      setLoading(true);\n      const result = await signInWithPopup(auth, googleProvider);\n      const userWithRole = await fetchUserRoleAndMySQLId(result.user);\n      setUser(userWithRole);\n      navigate('/');\n    } catch (error) {\n      console.error('Error al iniciar sesión con Google:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      await signOut(auth);\n      setUser(null);\n      navigate('/');\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    loginWithGoogle,\n    logout,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"0HV8mtzv4VZlhTdG8q4ZWxLZIcE=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","onAuthStateChanged","signInWithPopup","signOut","auth","googleProvider","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","adminEmails","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","interceptor","interceptors","request","use","config","currentUser","token","getIdToken","headers","Authorization","error","Promise","reject","eject","fetchUserRoleAndMySQLId","firebaseUser","clientData","response","get","email","status","data","newClient","name","displayName","cuit","createResponse","post","isAdmin","includes","role","mysqlId","id","console","unsubscribe","userWithRole","loginWithGoogle","result","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { onAuthStateChanged, signInWithPopup, signOut } from 'firebase/auth';\r\nimport { auth, googleProvider } from '../components/service/firebaseConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nconst adminEmails = [\"guillermo.ibanezc@gmail.com\", \"trek0.88@gmail.com\"];\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Configurar interceptor global de Axios\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.request.use(\r\n      async (config) => {\r\n        if (auth.currentUser) {\r\n          const token = await auth.currentUser.getIdToken();\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => axios.interceptors.request.eject(interceptor);\r\n  }, []);\r\n\r\n  const fetchUserRoleAndMySQLId = async (firebaseUser) => {\r\n    if (!firebaseUser) return null;\r\n\r\n    try {\r\n      let clientData = null;\r\n\r\n      // Intentar obtener el cliente por correo electrónico\r\n      try {\r\n        const response = await axios.get(`http://localhost:3001/api/clients/email/${firebaseUser.email}`);\r\n        if (response.status === 200) {\r\n          clientData = response.data;\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          // Si no se encuentra, crear un nuevo cliente\r\n          const newClient = {\r\n            name: firebaseUser.displayName || '',\r\n            email: firebaseUser.email,\r\n            cuit: '', // Se crea sin CUIT inicialmente\r\n          };\r\n          const createResponse = await axios.post('http://localhost:3001/api/clients', newClient);\r\n          if (createResponse.status === 201) {\r\n            clientData = createResponse.data;\r\n          }\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      // Asignar el rol basado en el correo del usuario\r\n      if (clientData) {\r\n        const isAdmin = adminEmails.includes(firebaseUser.email);\r\n        return {\r\n          ...firebaseUser,\r\n          role: isAdmin ? 'admin' : 'user',\r\n          isAdmin,\r\n          mysqlId: clientData.id,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener el rol del usuario o registrar en MySQL:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n      setLoading(true);\r\n      if (firebaseUser) {\r\n        const userWithRole = await fetchUserRoleAndMySQLId(firebaseUser);\r\n        setUser(userWithRole);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const loginWithGoogle = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await signInWithPopup(auth, googleProvider);\r\n      const userWithRole = await fetchUserRoleAndMySQLId(result.user);\r\n      setUser(userWithRole);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión con Google:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await signOut(auth);\r\n      setUser(null);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    loginWithGoogle,\r\n    logout,\r\n    isAdmin: user?.isAdmin || false,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,OAAO,QAAQ,eAAe;AAC5E,SAASC,IAAI,EAAEC,cAAc,QAAQ,sCAAsC;AAC3E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMc,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMd,UAAU,CAACY,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,MAAME,WAAW,GAAG,CAAC,6BAA6B,EAAE,oBAAoB,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMqB,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACAR,SAAS,CAAC,MAAM;IACd,MAAMuB,WAAW,GAAGrB,KAAK,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CAChD,MAAOC,MAAM,IAAK;MAChB,IAAIrB,IAAI,CAACsB,WAAW,EAAE;QACpB,MAAMC,KAAK,GAAG,MAAMvB,IAAI,CAACsB,WAAW,CAACE,UAAU,CAAC,CAAC;QACjDH,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE;MAClD;MACA,OAAOF,MAAM;IACf,CAAC,EACAM,KAAK,IAAK;MACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B,CACF,CAAC;IAED,OAAO,MAAM/B,KAAK,CAACsB,YAAY,CAACC,OAAO,CAACW,KAAK,CAACb,WAAW,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,uBAAuB,GAAG,MAAOC,YAAY,IAAK;IACtD,IAAI,CAACA,YAAY,EAAE,OAAO,IAAI;IAE9B,IAAI;MACF,IAAIC,UAAU,GAAG,IAAI;;MAErB;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,2CAA2CH,YAAY,CAACI,KAAK,EAAE,CAAC;QACjG,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3BJ,UAAU,GAAGC,QAAQ,CAACI,IAAI;QAC5B;MACF,CAAC,CAAC,OAAOX,KAAK,EAAE;QACd,IAAIA,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACO,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACnD;UACA,MAAME,SAAS,GAAG;YAChBC,IAAI,EAAER,YAAY,CAACS,WAAW,IAAI,EAAE;YACpCL,KAAK,EAAEJ,YAAY,CAACI,KAAK;YACzBM,IAAI,EAAE,EAAE,CAAE;UACZ,CAAC;UACD,MAAMC,cAAc,GAAG,MAAM/C,KAAK,CAACgD,IAAI,CAAC,mCAAmC,EAAEL,SAAS,CAAC;UACvF,IAAII,cAAc,CAACN,MAAM,KAAK,GAAG,EAAE;YACjCJ,UAAU,GAAGU,cAAc,CAACL,IAAI;UAClC;QACF,CAAC,MAAM;UACL,MAAMX,KAAK;QACb;MACF;;MAEA;MACA,IAAIM,UAAU,EAAE;QACd,MAAMY,OAAO,GAAGrC,WAAW,CAACsC,QAAQ,CAACd,YAAY,CAACI,KAAK,CAAC;QACxD,OAAO;UACL,GAAGJ,YAAY;UACfe,IAAI,EAAEF,OAAO,GAAG,OAAO,GAAG,MAAM;UAChCA,OAAO;UACPG,OAAO,EAAEf,UAAU,CAACgB;QACtB,CAAC;MACH;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;MACjF,OAAO,IAAI;IACb;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAMyD,WAAW,GAAGtD,kBAAkB,CAACG,IAAI,EAAE,MAAOgC,YAAY,IAAK;MACnEjB,UAAU,CAAC,IAAI,CAAC;MAChB,IAAIiB,YAAY,EAAE;QAChB,MAAMoB,YAAY,GAAG,MAAMrB,uBAAuB,CAACC,YAAY,CAAC;QAChEnB,OAAO,CAACuC,YAAY,CAAC;MACvB,CAAC,MAAM;QACLvC,OAAO,CAAC,IAAI,CAAC;MACf;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMoC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFtC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMuC,MAAM,GAAG,MAAMxD,eAAe,CAACE,IAAI,EAAEC,cAAc,CAAC;MAC1D,MAAMmD,YAAY,GAAG,MAAMrB,uBAAuB,CAACuB,MAAM,CAAC1C,IAAI,CAAC;MAC/DC,OAAO,CAACuC,YAAY,CAAC;MACrBpC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOW,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMwC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACFxC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMhB,OAAO,CAACC,IAAI,CAAC;MACnBa,OAAO,CAAC,IAAI,CAAC;MACbG,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOW,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyC,KAAK,GAAG;IACZ5C,IAAI;IACJE,OAAO;IACPuC,eAAe;IACfE,MAAM;IACNV,OAAO,EAAE,CAAAjC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiC,OAAO,KAAI;EAC5B,CAAC;EAED,oBACEzC,OAAA,CAACC,WAAW,CAACoD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9C,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAgD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAClD,GAAA,CA3HWF,YAAY;EAAA,QAGNP,WAAW;AAAA;AAAA4D,EAAA,GAHjBrD,YAAY;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}