{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\components\\\\Login\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '../service/firebaseConfig';\nimport { signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  setUserRole\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const provider = new GoogleAuthProvider();\n  const handleLogin = async () => {\n    try {\n      // Inicia sesión con Google\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      const userRef = doc(db, 'users', user.uid); // Referencia al documento del usuario en Firestore\n      const userSnap = await getDoc(userRef); // Obtenemos los datos del usuario\n\n      // Si el usuario no existe en la base de datos, se crea uno nuevo con rol \"user\"\n      if (!userSnap.exists()) {\n        await setDoc(userRef, {\n          role: 'user',\n          email: user.email,\n          name: user.displayName\n        });\n      }\n\n      // Obtenemos el rol del usuario (por defecto \"user\" si no existe)\n      const userRole = userSnap.exists() && userSnap.data().role || 'user';\n      setUserRole(userRole); // Actualizamos el rol del usuario en el estado global\n\n      // Redirigimos al usuario a la página protegida si es admin\n      navigate(userRole === 'admin' ? '/protected' : '/');\n    } catch (error) {\n      console.error('Error en el inicio de sesión con Google:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      // Cierra la sesión\n      await signOut(auth);\n      setUserRole(null); // Reseteamos el rol del usuario\n      navigate('/auth/login'); // Redirigimos al usuario a la página de login\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n    }\n  };\n  useEffect(() => {\n    // Verifica el estado de autenticación al cargar el componente\n    const unsubscribe = auth.onAuthStateChanged(async user => {\n      if (user) {\n        var _userSnap$data;\n        const userRef = doc(db, 'users', user.uid);\n        const userSnap = await getDoc(userRef);\n        setUserRole(((_userSnap$data = userSnap.data()) === null || _userSnap$data === void 0 ? void 0 : _userSnap$data.role) || 'user'); // Actualizamos el rol\n      } else {\n        setUserRole(null); // Si no hay usuario, reseteamos el rol\n      }\n    });\n\n    // Limpia la suscripción al desmontar el componente\n    return () => unsubscribe();\n  }, [setUserRole]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-bd-accent\",\n      onClick: handleLogin,\n      children: \"Iniciar sesi\\xF3n con Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleLogout,\n      children: \"Cerrar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useNavigate","auth","db","signInWithPopup","GoogleAuthProvider","signOut","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Auth","setUserRole","_s","navigate","provider","handleLogin","result","user","userRef","uid","userSnap","exists","role","email","name","displayName","userRole","data","error","console","handleLogout","unsubscribe","onAuthStateChanged","_userSnap$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/Login/Auth.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { auth, db } from '../service/firebaseConfig';\r\nimport { signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\n\r\nconst Auth = ({ setUserRole }) => {\r\n  const navigate = useNavigate();\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // Inicia sesión con Google\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      const userRef = doc(db, 'users', user.uid); // Referencia al documento del usuario en Firestore\r\n      const userSnap = await getDoc(userRef); // Obtenemos los datos del usuario\r\n\r\n      // Si el usuario no existe en la base de datos, se crea uno nuevo con rol \"user\"\r\n      if (!userSnap.exists()) {\r\n        await setDoc(userRef, { role: 'user', email: user.email, name: user.displayName });\r\n      }\r\n\r\n      // Obtenemos el rol del usuario (por defecto \"user\" si no existe)\r\n      const userRole = (userSnap.exists() && userSnap.data().role) || 'user';\r\n      setUserRole(userRole); // Actualizamos el rol del usuario en el estado global\r\n\r\n      // Redirigimos al usuario a la página protegida si es admin\r\n      navigate(userRole === 'admin' ? '/protected' : '/'); \r\n    } catch (error) {\r\n      console.error('Error en el inicio de sesión con Google:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Cierra la sesión\r\n      await signOut(auth);\r\n      setUserRole(null); // Reseteamos el rol del usuario\r\n      navigate('/auth/login'); // Redirigimos al usuario a la página de login\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Verifica el estado de autenticación al cargar el componente\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const userRef = doc(db, 'users', user.uid);\r\n        const userSnap = await getDoc(userRef);\r\n        setUserRole(userSnap.data()?.role || 'user'); // Actualizamos el rol\r\n      } else {\r\n        setUserRole(null); // Si no hay usuario, reseteamos el rol\r\n      }\r\n    });\r\n\r\n    // Limpia la suscripción al desmontar el componente\r\n    return () => unsubscribe();\r\n  }, [setUserRole]);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Login</h1>\r\n      <button className=\"btn btn-bd-accent\" onClick={handleLogin}>Iniciar sesión con Google</button>\r\n      <button className=\"btn btn-light\" onClick={handleLogout}>Cerrar sesión</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}