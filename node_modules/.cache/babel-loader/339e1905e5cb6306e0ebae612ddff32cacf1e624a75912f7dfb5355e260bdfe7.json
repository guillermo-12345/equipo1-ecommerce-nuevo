{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Index = void 0;\nconst promisify_1 = require(\"@google-cloud/promisify\");\n/**\n * @class\n * @param {Datastore} datastore The parent instance of this index.\n * @param {string} id The index name or id.\n *\n * @example\n * ```\n * const {Datastore} = require('@google-cloud/datastore');\n * const datastore = new Datastore();\n * const index = datastore.index('my-index');\n * ```\n */\nclass Index {\n  constructor(datastore, id) {\n    this.datastore = datastore;\n    this.id = id.split('/').pop();\n  }\n  get(gaxOptionsOrCallback, cb) {\n    const gaxOpts = typeof gaxOptionsOrCallback === 'object' ? gaxOptionsOrCallback : {};\n    const callback = typeof gaxOptionsOrCallback === 'function' ? gaxOptionsOrCallback : cb;\n    this.getMetadata(gaxOpts, (err, metadata) => {\n      callback(err, err ? null : this, metadata);\n    });\n  }\n  getMetadata(gaxOptionsOrCallback, cb) {\n    const gaxOpts = typeof gaxOptionsOrCallback === 'object' ? gaxOptionsOrCallback : {};\n    const callback = typeof gaxOptionsOrCallback === 'function' ? gaxOptionsOrCallback : cb;\n    this.datastore.request_({\n      client: 'DatastoreAdminClient',\n      method: 'getIndex',\n      reqOpts: {\n        indexId: this.id\n      },\n      gaxOpts\n    }, (err, resp) => {\n      if (resp) {\n        this.metadata = resp;\n      }\n      callback(err, resp);\n    });\n  }\n}\nexports.Index = Index;\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\n(0, promisify_1.promisifyAll)(Index);","map":{"version":3,"names":["promisify_1","require","Index","constructor","datastore","id","split","pop","get","gaxOptionsOrCallback","cb","gaxOpts","callback","getMetadata","err","metadata","request_","client","method","reqOpts","indexId","resp","exports","promisifyAll"],"sources":["../../src/index-class.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAGA,MAAAA,WAAA,GAAAC,OAAA;AA2CA;;;;;;;;;;;;AAYA,MAAaC,KAAK;EAKhBC,YAAYC,SAAoB,EAAEC,EAAU;IAC1C,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,EAAE,GAAGA,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAG;EAChC;EAeAC,GAAGA,CACDC,oBAAqD,EACrDC,EAAqB;IAErB,MAAMC,OAAO,GACX,OAAOF,oBAAoB,KAAK,QAAQ,GAAGA,oBAAoB,GAAG,EAAE;IACtE,MAAMG,QAAQ,GACZ,OAAOH,oBAAoB,KAAK,UAAU,GAAGA,oBAAoB,GAAGC,EAAG;IAEzE,IAAI,CAACG,WAAW,CAACF,OAAO,EAAE,CAACG,GAAG,EAAEC,QAAQ,KAAI;MAC1CH,QAAQ,CAACE,GAAG,EAAEA,GAAG,GAAG,IAAI,GAAG,IAAI,EAAEC,QAAQ,CAAC;IAC5C,CAAC,CAAC;EACJ;EAiBAF,WAAWA,CACTJ,oBAA6D,EAC7DC,EAA6B;IAE7B,MAAMC,OAAO,GACX,OAAOF,oBAAoB,KAAK,QAAQ,GAAGA,oBAAoB,GAAG,EAAE;IACtE,MAAMG,QAAQ,GACZ,OAAOH,oBAAoB,KAAK,UAAU,GAAGA,oBAAoB,GAAGC,EAAG;IAEzE,IAAI,CAACN,SAAS,CAACY,QAAQ,CACrB;MACEC,MAAM,EAAE,sBAAsB;MAC9BC,MAAM,EAAE,UAAU;MAClBC,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI,CAACf;OACf;MACDM;KACD,EACD,CAACG,GAAG,EAAEO,IAAI,KAAI;MACZ,IAAIA,IAAI,EAAE;QACR,IAAI,CAACN,QAAQ,GAAGM,IAAI;MACtB;MACAT,QAAQ,CAACE,GAAmB,EAAEO,IAAI,CAAC;IACrC,CAAC,CACF;EACH;;AA7EFC,OAAA,CAAApB,KAAA,GAAAA,KAAA;AAoFA;;;;;AAKA,IAAAF,WAAA,CAAAuB,YAAY,EAACrB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}