{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\components\\\\ClientesList\\\\ClientesList.jsx\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from 'react';\r\nimport { getClientes, addClientes, updateClientes, deleteClientes } from '../../asyncMock';\r\nimport ClientesForm from '../ClientesForm/ClientesForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getClientes()\r\n      .then((data) => {\r\n        setClientes(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching clients:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddCliente = (cliente) => {\r\n    setLoading(true);\r\n    addClientes(cliente)\r\n      .then((newCliente) => {\r\n        setClientes((prevClientes) => [...prevClientes, newCliente]);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleUpdateCliente = (id, updatedCliente) => {\r\n    setLoading(true);\r\n    updateClientes(id, updatedCliente)\r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.map((cliente) =>\r\n            cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n          )\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setEditCliente(null);\r\n      });\r\n  };\r\n\r\n  const handleDeleteCliente = (id) => {\r\n    setLoading(true);\r\n    deleteClientes(id)\r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.filter((cliente) => cliente.id !== id)\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClientesForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClientesForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList; \r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore';\r\nimport ClientesForm from '../ClientesForm/ClientesForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n  \r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"clientes\"));\r\n        const clientList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setClientes(clientList);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, [db]);\r\n\r\n  const handleAddCliente = async (cliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"clientes\"), cliente);\r\n      setClientes((prevClientes) => [...prevClientes, { id: docRef.id, ...cliente }]);\r\n    } catch (error) {\r\n      console.error('Error adding client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCliente = async (id, updatedCliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientDoc = doc(db, \"clientes\", id);\r\n      await updateDoc(clientDoc, updatedCliente);\r\n      setClientes((prevClientes) =>\r\n        prevClientes.map((cliente) =>\r\n          cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setEditCliente(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCliente = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientDoc = doc(db, \"clientes\", id);\r\n      await deleteDoc(clientDoc);\r\n      setClientes((prevClientes) =>\r\n        prevClientes.filter((cliente) => cliente.id !== id)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error deleting client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClientesForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClientesForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ClienteForm from '../ClienteForm/ClienteForm';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteList = () => {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editCliente, setEditCliente] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/api/clientes').then(response => {\n      setClientes(response.data);\n    }).catch(error => {\n      console.error('Error fetching clients:', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  const handleAddCliente = cliente => {\n    setLoading(true);\n    axios.post('/api/clientes', cliente).then(response => {\n      setClientes(prevClientes => [...prevClientes, response.data]);\n    }).catch(error => {\n      console.error('Error adding client:', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  const handleUpdateCliente = (id, updatedCliente) => {\n    setLoading(true);\n    axios.put(`/api/clientes/${id}`, updatedCliente).then(() => {\n      setClientes(prevClientes => prevClientes.map(cliente => cliente.id === id ? {\n        ...cliente,\n        ...updatedCliente\n      } : cliente));\n    }).catch(error => {\n      console.error('Error updating client:', error);\n    }).finally(() => {\n      setLoading(false);\n      setEditCliente(null);\n    });\n  };\n  const handleDeleteCliente = id => {\n    setLoading(true);\n    axios.delete(`/api/clientes/${id}`).then(() => {\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== id));\n    }).catch(error => {\n      console.error('Error deleting client:', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nombre: \", cliente.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CUIT: \", cliente.cuit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", cliente.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mx-2\",\n        onClick: () => setEditCliente(cliente),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDeleteCliente(cliente.id),\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, cliente.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)), editCliente && /*#__PURE__*/_jsxDEV(ClienteForm, {\n      initialData: editCliente,\n      onSave: updatedCliente => handleUpdateCliente(editCliente.id, updatedCliente)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClienteForm, {\n      onSave: handleAddCliente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(ClienteList, \"epZpuQhMJ4qdgtdMsRuqfMb/S8Q=\");\n_c = ClienteList;\nexport default ClienteList;\nvar _c;\n$RefreshReg$(_c, \"ClienteList\");","map":{"version":3,"names":["React","useState","useEffect","axios","ClienteForm","Button","jsxDEV","_jsxDEV","ClienteList","_s","clientes","setClientes","loading","setLoading","editCliente","setEditCliente","get","then","response","data","catch","error","console","finally","handleAddCliente","cliente","post","prevClientes","handleUpdateCliente","id","updatedCliente","put","map","handleDeleteCliente","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","name","cuit","email","className","onClick","initialData","onSave","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/ClientesList/ClientesList.jsx"],"sourcesContent":["/* import React, { useEffect, useState } from 'react';\r\nimport { getClientes, addClientes, updateClientes, deleteClientes } from '../../asyncMock';\r\nimport ClientesForm from '../ClientesForm/ClientesForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getClientes()\r\n      .then((data) => {\r\n        setClientes(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching clients:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddCliente = (cliente) => {\r\n    setLoading(true);\r\n    addClientes(cliente)\r\n      .then((newCliente) => {\r\n        setClientes((prevClientes) => [...prevClientes, newCliente]);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleUpdateCliente = (id, updatedCliente) => {\r\n    setLoading(true);\r\n    updateClientes(id, updatedCliente)\r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.map((cliente) =>\r\n            cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n          )\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setEditCliente(null);\r\n      });\r\n  };\r\n\r\n  const handleDeleteCliente = (id) => {\r\n    setLoading(true);\r\n    deleteClientes(id)\r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.filter((cliente) => cliente.id !== id)\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClientesForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClientesForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList; \r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore';\r\nimport ClientesForm from '../ClientesForm/ClientesForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n  \r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"clientes\"));\r\n        const clientList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setClientes(clientList);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, [db]);\r\n\r\n  const handleAddCliente = async (cliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"clientes\"), cliente);\r\n      setClientes((prevClientes) => [...prevClientes, { id: docRef.id, ...cliente }]);\r\n    } catch (error) {\r\n      console.error('Error adding client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCliente = async (id, updatedCliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientDoc = doc(db, \"clientes\", id);\r\n      await updateDoc(clientDoc, updatedCliente);\r\n      setClientes((prevClientes) =>\r\n        prevClientes.map((cliente) =>\r\n          cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setEditCliente(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCliente = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientDoc = doc(db, \"clientes\", id);\r\n      await deleteDoc(clientDoc);\r\n      setClientes((prevClientes) =>\r\n        prevClientes.filter((cliente) => cliente.id !== id)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error deleting client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClientesForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClientesForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList;*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; \r\nimport ClienteForm from '../ClienteForm/ClienteForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n\r\n \r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/api/clientes')  \r\n      .then((response) => {\r\n        setClientes(response.data); \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching clients:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddCliente = (cliente) => {\r\n    setLoading(true);\r\n    axios.post('/api/clientes', cliente) \r\n      .then((response) => {\r\n        setClientes((prevClientes) => [...prevClientes, response.data]); \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding client:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleUpdateCliente = (id, updatedCliente) => {\r\n    setLoading(true);\r\n    axios.put(`/api/clientes/${id}`, updatedCliente) \r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.map((cliente) =>\r\n            cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating client:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setEditCliente(null);\r\n      });\r\n  };\r\n\r\n  const handleDeleteCliente = (id) => {\r\n    setLoading(true);\r\n    axios.delete(`/api/clientes/${id}`) \r\n      .then(() => {\r\n        setClientes((prevClientes) =>\r\n          prevClientes.filter((cliente) => cliente.id !== id)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting client:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <p>Email: {cliente.email}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClienteForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClienteForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}