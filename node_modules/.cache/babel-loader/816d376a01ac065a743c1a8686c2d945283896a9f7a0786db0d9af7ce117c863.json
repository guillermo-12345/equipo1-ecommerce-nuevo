{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getAuth, onAuthStateChanged, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nimport { initializeApp, getApps } from 'firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCfAJnhRLGif5Rw537AQmounfGVi0cST10\",\n  authDomain: \"equipo1-ecommerce.firebaseapp.com\",\n  projectId: \"equipo1-ecommerce\",\n  storageBucket: \"equipo1-ecommerce.appspot.com\",\n  messagingSenderId: \"66738131494\",\n  appId: \"1:66738131494:web:e199a3bbf8ca100a010ce7\"\n};\n\n// Inicializar Firebase solo si no está ya inicializado\nif (!getApps().length) {\n  initializeApp(firebaseConfig);\n}\nconst auth = getAuth();\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchUserRole = async () => {\n    try {\n      const token = await auth.currentUser.getIdToken();\n      const response = await axios.get('http://localhost:3001/auth/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser({\n        ...user,\n        role: response.data.role\n      });\n    } catch (error) {\n      console.error('Error al obtener el rol del usuario:', error);\n      setError(error);\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const token = await result.user.getIdToken();\n      await axios.post('http://localhost:3001/auth/login', {\n        firebaseToken: token\n      });\n      fetchUserRole();\n    } catch (error) {\n      console.error('Error al iniciar sesión con Google:', error);\n      setError(error);\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = await auth.currentUser.getIdToken();\n      await axios.post('http://localhost:3001/auth/logout', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await signOut(auth);\n      setUser(null);\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n      setError(error);\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        setUser(user);\n        fetchUserRole();\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      loginWithGoogle,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","getAuth","onAuthStateChanged","signInWithPopup","GoogleAuthProvider","signOut","initializeApp","getApps","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","length","auth","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","fetchUserRole","token","currentUser","getIdToken","response","get","headers","Authorization","role","data","console","loginWithGoogle","provider","result","post","firebaseToken","logout","unsubscribe","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { getAuth, onAuthStateChanged, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\r\nimport { initializeApp, getApps } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCfAJnhRLGif5Rw537AQmounfGVi0cST10\",\r\n  authDomain: \"equipo1-ecommerce.firebaseapp.com\",\r\n  projectId: \"equipo1-ecommerce\",\r\n  storageBucket: \"equipo1-ecommerce.appspot.com\",\r\n  messagingSenderId: \"66738131494\",\r\n  appId: \"1:66738131494:web:e199a3bbf8ca100a010ce7\"\r\n};\r\n\r\n// Inicializar Firebase solo si no está ya inicializado\r\nif (!getApps().length) {\r\n  initializeApp(firebaseConfig);\r\n}\r\n\r\nconst auth = getAuth();\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchUserRole = async () => {\r\n    try {\r\n      const token = await auth.currentUser.getIdToken();\r\n      const response = await axios.get('http://localhost:3001/auth/user', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setUser({ ...user, role: response.data.role });\r\n    } catch (error) {\r\n      console.error('Error al obtener el rol del usuario:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const loginWithGoogle = async () => {\r\n    try {\r\n      const provider = new GoogleAuthProvider();\r\n      const result = await signInWithPopup(auth, provider);\r\n      const token = await result.user.getIdToken();\r\n      await axios.post('http://localhost:3001/auth/login', { firebaseToken: token });\r\n      fetchUserRole();\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión con Google:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const token = await auth.currentUser.getIdToken();\r\n      await axios.post('http://localhost:3001/auth/logout', {}, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      await signOut(auth);\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        fetchUserRole();\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, error, loginWithGoogle, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AACzG,SAASC,aAAa,EAAEC,OAAO,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,aAAa;EAChCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,IAAI,CAACT,OAAO,CAAC,CAAC,CAACU,MAAM,EAAE;EACrBX,aAAa,CAACI,cAAc,CAAC;AAC/B;AAEA,MAAMQ,IAAI,GAAGjB,OAAO,CAAC,CAAC;AAEtB,MAAMkB,WAAW,gBAAGvB,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMwB,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMxB,UAAU,CAACsB,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMd,IAAI,CAACe,WAAW,CAACC,UAAU,CAAC,CAAC;MACjD,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAAC,iCAAiC,EAAE;QAClEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFN,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEc,IAAI,EAAEJ,QAAQ,CAACK,IAAI,CAACD;MAAK,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIvC,kBAAkB,CAAC,CAAC;MACzC,MAAMwC,MAAM,GAAG,MAAMzC,eAAe,CAACe,IAAI,EAAEyB,QAAQ,CAAC;MACpD,MAAMX,KAAK,GAAG,MAAMY,MAAM,CAACnB,IAAI,CAACS,UAAU,CAAC,CAAC;MAC5C,MAAMlC,KAAK,CAAC6C,IAAI,CAAC,kCAAkC,EAAE;QAAEC,aAAa,EAAEd;MAAM,CAAC,CAAC;MAC9ED,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMf,KAAK,GAAG,MAAMd,IAAI,CAACe,WAAW,CAACC,UAAU,CAAC,CAAC;MACjD,MAAMlC,KAAK,CAAC6C,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC,EAAE;QACxDR,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,MAAM3B,OAAO,CAACa,IAAI,CAAC;MACnBQ,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED/B,SAAS,CAAC,MAAM;IACd,MAAMkD,WAAW,GAAG9C,kBAAkB,CAACgB,IAAI,EAAE,MAAOO,IAAI,IAAK;MAC3D,IAAIA,IAAI,EAAE;QACRC,OAAO,CAACD,IAAI,CAAC;QACbM,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLL,OAAO,CAAC,IAAI,CAAC;MACf;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMoB,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvC,OAAA,CAACU,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,OAAO;MAAEE,KAAK;MAAEa,eAAe;MAAEK;IAAO,CAAE;IAAAxB,QAAA,EAC5EA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,GAAA,CAhEWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}