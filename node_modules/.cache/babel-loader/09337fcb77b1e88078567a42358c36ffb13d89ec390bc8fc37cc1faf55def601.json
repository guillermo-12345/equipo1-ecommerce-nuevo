{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\OneDrive\\\\Documents\\\\UADE\\\\TP\\\\equipo1-ecommerce\\\\equipo1-ecommerce\\\\src\\\\components\\\\ClientesList\\\\ClientesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { datastore } from '../../datastoreConfig'; // Asegúrate de la ruta correcta\nimport ClientesForm from '../ClientesForm/ClientesForm';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteList = () => {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editCliente, setEditCliente] = useState(null);\n  useEffect(() => {\n    const fetchClientes = async () => {\n      setLoading(true);\n      try {\n        const query = datastore.createQuery('clientes');\n        const [clientList] = await datastore.runQuery(query);\n        const formattedClients = clientList.map(client => ({\n          id: client[datastore.KEY].id,\n          ...client\n        }));\n        setClientes(formattedClients);\n      } catch (error) {\n        console.error('Error fetching clients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClientes();\n  }, []);\n  const handleAddCliente = async cliente => {\n    setLoading(true);\n    try {\n      const clientKey = datastore.key('clientes');\n      const entity = {\n        key: clientKey,\n        data: cliente\n      };\n      await datastore.save(entity);\n      setClientes(prevClientes => [...prevClientes, {\n        id: clientKey.id,\n        ...cliente\n      }]);\n    } catch (error) {\n      console.error('Error adding client:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpdateCliente = async (id, updatedCliente) => {\n    setLoading(true);\n    try {\n      const clientKey = datastore.key(['clientes', datastore.int(id)]);\n      await datastore.update({\n        key: clientKey,\n        data: updatedCliente\n      });\n      setClientes(prevClientes => prevClientes.map(cliente => cliente.id === id ? {\n        ...cliente,\n        ...updatedCliente\n      } : cliente));\n    } catch (error) {\n      console.error('Error updating client:', error);\n    } finally {\n      setLoading(false);\n      setEditCliente(null);\n    }\n  };\n  const handleDeleteCliente = async id => {\n    setLoading(true);\n    try {\n      const clientKey = datastore.key(['clientes', datastore.int(id)]);\n      await datastore.delete(clientKey);\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== id));\n    } catch (error) {\n      console.error('Error deleting client:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nombre: \", cliente.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CUIT: \", cliente.cuit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", cliente.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mx-2\",\n        onClick: () => setEditCliente(cliente),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDeleteCliente(cliente.id),\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, cliente.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), editCliente && /*#__PURE__*/_jsxDEV(ClientesForm, {\n      initialData: editCliente,\n      onSave: updatedCliente => handleUpdateCliente(editCliente.id, updatedCliente)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClientesForm, {\n      onSave: handleAddCliente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ClienteList, \"epZpuQhMJ4qdgtdMsRuqfMb/S8Q=\");\n_c = ClienteList;\nexport default ClienteList;\nvar _c;\n$RefreshReg$(_c, \"ClienteList\");","map":{"version":3,"names":["React","useEffect","useState","datastore","ClientesForm","Button","jsxDEV","_jsxDEV","ClienteList","_s","clientes","setClientes","loading","setLoading","editCliente","setEditCliente","fetchClientes","query","createQuery","clientList","runQuery","formattedClients","map","client","id","KEY","error","console","handleAddCliente","cliente","clientKey","key","entity","data","save","prevClientes","handleUpdateCliente","updatedCliente","int","update","handleDeleteCliente","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","name","cuit","email","className","onClick","initialData","onSave","_c","$RefreshReg$"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/ClientesList/ClientesList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { datastore } from '../../datastoreConfig'; // Asegúrate de la ruta correcta\r\nimport ClientesForm from '../ClientesForm/ClientesForm';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ClienteList = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editCliente, setEditCliente] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const query = datastore.createQuery('clientes');\r\n        const [clientList] = await datastore.runQuery(query);\r\n        const formattedClients = clientList.map((client) => ({\r\n          id: client[datastore.KEY].id,\r\n          ...client\r\n        }));\r\n        setClientes(formattedClients);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, []);\r\n\r\n  const handleAddCliente = async (cliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientKey = datastore.key('clientes');\r\n      const entity = {\r\n        key: clientKey,\r\n        data: cliente,\r\n      };\r\n      await datastore.save(entity);\r\n      setClientes((prevClientes) => [...prevClientes, { id: clientKey.id, ...cliente }]);\r\n    } catch (error) {\r\n      console.error('Error adding client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCliente = async (id, updatedCliente) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientKey = datastore.key(['clientes', datastore.int(id)]);\r\n      await datastore.update({ key: clientKey, data: updatedCliente });\r\n      setClientes((prevClientes) =>\r\n        prevClientes.map((cliente) =>\r\n          cliente.id === id ? { ...cliente, ...updatedCliente } : cliente\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setEditCliente(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCliente = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const clientKey = datastore.key(['clientes', datastore.int(id)]);\r\n      await datastore.delete(clientKey);\r\n      setClientes((prevClientes) =>\r\n        prevClientes.filter((cliente) => cliente.id !== id)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error deleting client:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Clientes</h1>\r\n      \r\n      {clientes.map((cliente) => (\r\n        <div key={cliente.id}>\r\n          <p>Nombre: {cliente.name}</p>\r\n          <p>CUIT: {cliente.cuit}</p>\r\n          <p>Email: {cliente.email}</p>\r\n          <Button className='mx-2' onClick={() => setEditCliente(cliente)}>Editar</Button>\r\n          <Button onClick={() => handleDeleteCliente(cliente.id)}>Eliminar</Button>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {editCliente && (\r\n        <ClientesForm\r\n          initialData={editCliente}\r\n          onSave={(updatedCliente) => handleUpdateCliente(editCliente.id, updatedCliente)}\r\n        />\r\n      )}\r\n      <ClientesForm onSave={handleAddCliente} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}