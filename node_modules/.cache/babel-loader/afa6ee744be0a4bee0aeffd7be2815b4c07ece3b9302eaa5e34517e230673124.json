{"ast":null,"code":"const jwt = require('jsonwebtoken');\nconst generarJWT = (uid, email, role) => {\n  return new Promise((resolve, reject) => {\n    const payload = {\n      uid,\n      email,\n      role\n    };\n    jwt.sign(payload, process.env.JWT_SECRET || 'secret', {\n      expiresIn: '24h'\n    }, (err, token) => {\n      if (err) {\n        console.log(err);\n        reject('No se pudo generar el JWT');\n      } else {\n        resolve(token);\n      }\n    });\n  });\n};\nmodule.exports = {\n  generarJWT\n};","map":{"version":3,"names":["jwt","require","generarJWT","uid","email","role","Promise","resolve","reject","payload","sign","process","env","JWT_SECRET","expiresIn","err","token","console","log","module","exports"],"sources":["C:/Users/guill/OneDrive/Documents/UADE/TP/equipo1-ecommerce/equipo1-ecommerce/src/components/helpers/generadorJWT.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\nconst generarJWT = (uid, email, role) => {\r\n  return new Promise((resolve, reject) => {\r\n    const payload = { uid, email, role };\r\n    jwt.sign(\r\n      payload,\r\n      process.env.JWT_SECRET || 'secret', \r\n      { expiresIn: '24h' },\r\n      (err, token) => {\r\n        if (err) {\r\n          console.log(err);\r\n          reject('No se pudo generar el JWT');\r\n        } else {\r\n          resolve(token);\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nmodule.exports = {\r\n  generarJWT,\r\n};\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEnC,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,KAAK;EACvC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAG;MAAEN,GAAG;MAAEC,KAAK;MAAEC;IAAK,CAAC;IACpCL,GAAG,CAACU,IAAI,CACND,OAAO,EACPE,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,QAAQ,EAClC;MAAEC,SAAS,EAAE;IAAM,CAAC,EACpB,CAACC,GAAG,EAAEC,KAAK,KAAK;MACd,IAAID,GAAG,EAAE;QACPE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChBP,MAAM,CAAC,2BAA2B,CAAC;MACrC,CAAC,MAAM;QACLD,OAAO,CAACS,KAAK,CAAC;MAChB;IACF,CACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAG;EACflB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}